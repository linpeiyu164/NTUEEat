[{"/Users/chenbairu/NTUEEat/src/index.js":"1","/Users/chenbairu/NTUEEat/src/reportWebVitals.js":"2","/Users/chenbairu/NTUEEat/src/App.js":"3","/Users/chenbairu/NTUEEat/src/Register.js":"4","/Users/chenbairu/NTUEEat/src/userContext.js":"5","/Users/chenbairu/NTUEEat/src/main/Random.js":"6","/Users/chenbairu/NTUEEat/src/main/Main.js":"7","/Users/chenbairu/NTUEEat/src/main/Mainbar.js":"8","/Users/chenbairu/NTUEEat/src/containers/AddStore.js":"9","/Users/chenbairu/NTUEEat/src/Profile.js":"10","/Users/chenbairu/NTUEEat/src/containers/storeContainer.js":"11","/Users/chenbairu/NTUEEat/src/main/Navbar.js":"12","/Users/chenbairu/NTUEEat/src/main/StoreList.js":"13","/Users/chenbairu/NTUEEat/src/Constants.js":"14","/Users/chenbairu/NTUEEat/src/routes/routes.js":"15","/Users/chenbairu/NTUEEat/src/components/store/Ratestar.js":"16","/Users/chenbairu/NTUEEat/src/components/store/BasicInfo.js":"17","/Users/chenbairu/NTUEEat/src/components/store/Review.js":"18","/Users/chenbairu/NTUEEat/src/main/OutlinedCard.js":"19"},{"size":500,"mtime":1610861657863,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606911919704,"results":"22","hashOfConfig":"21"},{"size":1171,"mtime":1610974169559,"results":"23","hashOfConfig":"21"},{"size":9227,"mtime":1610874290141,"results":"24","hashOfConfig":"21"},{"size":104,"mtime":1610861657865,"results":"25","hashOfConfig":"21"},{"size":4391,"mtime":1610978862742,"results":"26","hashOfConfig":"21"},{"size":3132,"mtime":1610978516861,"results":"27","hashOfConfig":"21"},{"size":2975,"mtime":1610979151246,"results":"28","hashOfConfig":"21"},{"size":8718,"mtime":1610868146454,"results":"29","hashOfConfig":"21"},{"size":8983,"mtime":1610941884645,"results":"30","hashOfConfig":"21"},{"size":2203,"mtime":1610978957692,"results":"31","hashOfConfig":"21"},{"size":5843,"mtime":1610890179481,"results":"32","hashOfConfig":"21"},{"size":1714,"mtime":1610937549630,"results":"33","hashOfConfig":"21"},{"size":260,"mtime":1610861657854,"results":"34","hashOfConfig":"21"},{"size":1226,"mtime":1610941884648,"results":"35","hashOfConfig":"21"},{"size":1389,"mtime":1610941884671,"results":"36","hashOfConfig":"21"},{"size":4077,"mtime":1610976677899,"results":"37","hashOfConfig":"21"},{"size":4246,"mtime":1610941884647,"results":"38","hashOfConfig":"21"},{"size":3430,"mtime":1610979327143,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jg8th1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/Users/chenbairu/NTUEEat/src/index.js",[],["92","93"],"/Users/chenbairu/NTUEEat/src/reportWebVitals.js",[],"/Users/chenbairu/NTUEEat/src/App.js",[],"/Users/chenbairu/NTUEEat/src/Register.js",["94","95"],"import { TextField , Card, Button, InputAdornment, Grid, Typography, Snackbar, IconButton} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert';\nimport { useState , useContext} from 'react'\nimport logo from './Image/foodicon.png'\nimport { AccountCircle } from '@material-ui/icons'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport LockIcon from '@material-ui/icons/Lock';\nimport axios from 'axios'\nimport userContext from './userContext'\nimport { Redirect } from 'react-router-dom'\n\n\nconst instance = axios.create( { \n    baseURL : \"http://localhost:4000/users\"\n})\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    paper : {\n        margin : theme.spacing(20),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    cardcontent : {\n        margin : theme.spacing(1),\n    },\n    button : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(2)\n    },\n    snackbar : {\n        padding : theme.spacing(1)\n    }\n}))\nfunction Register(){\n    const classes = useStyle()\n    let {user, setUser} = useContext(userContext)\n    let [username , setUsername] = useState('');\n    let [password, setPassword] = useState('');\n    let [usernameError, setUsernameError] = useState(null);\n    let [passwordError, setPasswordError] = useState(null);\n    let [registered, setRegistered] = useState(false);\n    let [loggedIn, setLoggedIn] = useState(false)\n    const handleUsername = (e) => {\n        let target = e.target\n        setUsername(target.value)\n    }\n    const handlePassword = (e) => {\n        let target = e.target\n        setPassword(target.value)\n    }\n    const handleRegister = async (e) => {\n        if(username && password){\n            setUsernameError(null)\n            setPasswordError(null)\n            let res = await instance.post('/register', {\n                username : username,\n                password : password\n            })\n            if(res.data.isUnique){\n                // redirect to home page with user info\n                console.log('successfully registered')\n                setRegistered(true)\n            }else{\n                // check for username uniqueness\n                setUsernameError('username has been used')\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleLogin = async (e) => {\n        if(username && password){\n            setUsernameError('')\n            setPasswordError('')\n            let res = await instance.post('/login', {\n                username : username,\n                password : password\n            })\n            if(res.data.invalidUser){\n                setUsernameError('Invalid username')\n            }\n            if(res.data.invalidPassword){\n                setPasswordError('Invalid password')\n            }\n            if(!res.data.invalidUser && !res.data.invalidPassword){\n                setUser(res.data)\n                setLoggedIn(true)\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleClose = (e) => {\n        setRegistered(false)\n    }\n    const handleUsernameError = () => {\n        setUsernameError(false)\n    }\n    const handlePasswordError = () => {\n        setPasswordError(false)\n    }\n    return(\n        (!user)?\n        (<>\n        <Card className={classes.paper} alignItems=\"center\" >\n            <Grid container direction=\"row\" justify=\"center\" >\n                <Grid item>\n                    <Typography variant=\"h1\">NTUEEAT</Typography>\n                </Grid>\n                <Grid item container direction=\"column\">\n                <Grid\n                    container  \n                    item\n                    alignItems=\"center\"\n                    justify=\"center\"  \n                    direction=\"column\"\n                >\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <img src={logo}/>\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <TextField \n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AccountCircle />\n                                </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleUsername}\n                        />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                    <TextField\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        placeholder=\"Password\"\n                        label=\"Password\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <LockIcon />\n                            </InputAdornment>\n                            ),\n                        }}\n                        onChange={handlePassword}\n                    />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <Button onClick={handleRegister} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Register\n                        </Button>\n                        <Button onClick={handleLogin} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Login\n                        </Button>\n                        <Snackbar className={classes.snackbar}\n                            open={registered} \n                            autoHideDuration={4000} \n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            onClose={handleClose}\n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert onClose={handleClose} severity=\"success\">\n                            Registration Successful\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            open={usernameError} \n                            onClose={handleUsernameError}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleUsernameError} >\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handleUsernameError}>\n                            {usernameError ? `${usernameError}` : null}\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            open={passwordError} \n                            onClose={handlePasswordError}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handlePasswordError}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handlePasswordError}>\n                            {passwordError ? `${passwordError}`: null}\n                            </Alert>\n                        </Snackbar>\n                    </Grid>\n                </Grid>\n                </Grid>\n            </Grid>\n            </Card>\n        </>\n        ): <Redirect to=\"/\" />\n    )\n}\nexport default Register","/Users/chenbairu/NTUEEat/src/userContext.js",[],"/Users/chenbairu/NTUEEat/src/main/Random.js",["96"],"import React, {useState} from 'react'\nimport { Button, Grid, Typography, Card, Dialog} from '@material-ui/core'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000\"})\n\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    outergrid : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    card : {\n        margin : theme.spacing(1),\n        padding : theme.spacing(4),\n    },\n    innercard : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    text : {\n        margin : theme.spacing(1),\n    },\n    buttonHelp : {\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    buttonEat : {\n        paddingLeft : theme.spacing(2),\n        paddingRight : theme.spacing(2),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    header : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(3),\n    }\n}))\n\nfunction Random({ CloseBackdrop }){\n    const classes = useStyle()\n    const [result, setResult] = useState(null)\n    const getResult = async () => {\n        const res = await instance.get('/stores/random')\n        setResult(res.data)\n    }\n    const handleClose = () => {\n        CloseBackdrop()\n        setResult(null)\n    }\n    return(\n        <>\n            <Grid container\n                justify=\"center\"\n                direction=\"row\"\n                className={classes.outergrid}\n            >\n                <Card alignItems=\"center\"\n                    justify=\"center\"\n                    style={{backgroundColor: \"#EBEBD3\"}}\n                    className={classes.card}\n                >\n                <Grid item\n                    container \n                    direction=\"column\"\n                    justify=\"center\" \n                >\n                    <Grid item>\n                        <Typography className={classes.header} variant=\"h2\">今天吃什麼</Typography>\n                    </Grid>\n                    <Grid item>\n                        {(result) ? (\n                            <Card \n                                alignItems=\"center\"\n                                className={classes.innercard}\n                            >\n                                <Typography variant=\"h5\" style={{ display : \"inline-block\" }} className={classes.text}>{result.storename}</Typography>\n                                <Link to={`/store/${result._id}`}\n                                    style={{paddingLeft: 13, \n                                        textDecoration: 'none', \n                                        display: \"inline-block\", \n                                        alignSelf : \"flex-end\",\n                                        float : \"right\"\n                                    }}\n                                >\n                                    <Button\n                                        onClick={()=>handleClose()}\n                                        className={classes.buttonEat}\n                                        style={{ \n                                            backgroundColor : \"#3C3C3B\",\n                                            color : \"#FFFFFF\"\n                                    }}>\n                                        吃！\n                                    </Button>\n                                </Link>\n                            </Card>\n                        ):null\n                        }\n                    </Grid>\n                    <Grid item \n                        container\n                        justify=\"center\"\n                    >\n                        <Button \n                            size=\"large\"\n                            onClick={getResult}\n                        >\n                            救救我！\n                        </Button>\n                        <Button onClick={handleClose}>close</Button>\n                    </Grid>\n                </Grid>\n                </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default Random;","/Users/chenbairu/NTUEEat/src/main/Main.js",["97","98"],"// import Button from '@material-ui/core/Button';\nimport Navbar from './Navbar'\nimport StoreList from \"./StoreList\"\nimport axios from \"axios\"\nimport Alert from '@material-ui/lab/Alert';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { makeStyles, Snackbar , IconButton} from '@material-ui/core'\nimport { useState ,useEffect , useContext} from 'react'\nimport userContext from '../userContext'\n\nconst useStyles = makeStyles(theme => ({\n  snackbar : {\n    padding : theme.spacing(1)\n  }\n}))\n\n\nconst instance = axios.create({baseURL : \"http://localhost:4000/stores\"});\nexport default function Main() {\n  \n  let {user} = useContext(userContext)\n  const classes = useStyles()\n  const [content,setContents]=useState(\"\") \n  \n  const[location,setLocal] = useState(\"\");\n  const[price,setPrice] = useState(\"\");\n  const[prefer,setPrefer] = useState(\"\");\n  const[search,setSearch] = useState(\"\")\n  let [error,setError] = useState(null)\n\n  const handleSetLocal = (e) => {\n    setLocal(e)\n  }\n  const handleSetPrice = (e) => {\n    setPrice(e)\n  }\n  const handleSetPrefer = (e) => {\n    setPrefer(e)\n  }\n  const handleClose = (e) => {\n    setError(false)\n  }\n  const handleError = () => {\n    setError(false)\n  }\n  const handlesetSearch = (e) => {\n    setSearch(e)\n  } \n  useEffect(async ()=>{\n    const {data} = await instance.get(\"/\");\n    if(data.msg){\n      setContents(null)\n    }else if(data.Error){\n      console.log(data.Error)\n    }else{\n      setContents(data);\n    }\n   \n  },[])\n\n  const Submit=async()=>{\n    const {data} = await instance.post(\"/\",{\n      pricing:price,\n      location:location,\n      preferences:prefer\n    });\n    if(data.msg){\n      setContents(null)\n    }else if(data.Error){\n      console.log(data.Error)\n    }else{\n      setContents(data);\n    }\n    // console.log(content);\n  }\n  const handleSearch=async()=>{\n    const {data} = await instance.post(`/search/?QUERY=${search}`)\n    if(data.msg){\n      setContents(null)\n    }else if(data.Error){\n      console.log(data.Error)\n    }else{\n      setContents(data);\n    }\n    // console.log(content);\n  }\n  return (\n      <div className=\"main\">\n      \n        <Navbar Local={handleSetLocal} Price={handleSetPrice} Prefer={handleSetPrefer} Submit={Submit} search={search} handleSearch={handleSearch} handlesetSearch={handlesetSearch}/>\n        <div className=\"stores\">\n          <StoreList className=\"storeList\" data={content}/>\n        </div>\n        <Snackbar className={classes.snackbar}\n                  anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                  open={error} \n                  onClose={handleClose}\n                  autoHideDuration={2000} \n                  action={\n                      <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleError} >\n                          <HighlightOffIcon fontSize=\"small\" />\n                      </IconButton>\n                  }\n              >\n                  <Alert severity=\"error\" onClose={handleError}>\n                  {error ? `${error}` : null}\n                  </Alert>\n              </Snackbar>\n      </div>\n      \n    );\n}\n","/Users/chenbairu/NTUEEat/src/main/Mainbar.js",["99","100","101","102","103"],"\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport React, {useState , useContext} from \"react\";\nimport Random from './Random'\nimport { IconButton, Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper} from '@material-ui/core';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FaceIcon from '@material-ui/icons/Face';\nimport './Navbar.css';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport HomeIcon from '@material-ui/icons/Home';\nimport userContext from '../userContext'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport foodIcon from '../Image/foodicon.png'\n// import instance from \"../routes\"\nimport { Link } from 'react-router-dom'  \n\nconst useStyles=makeStyles((theme)=>({\n    appbar:{\n      padding : theme.spacing(3),\n      backgroundColor : \"#D4E6F1\"\n    },\n    Button:{\n        margin:theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n}))\n\nexport default function Mainbar(){\n    let {user, setUser} = useContext(userContext)\n    const classes=useStyles();\n    const[open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleLogOut = () => {\n        setUser(null)\n    }\n    return(\n        <>\n        <Grid container>\n        <AppBar className={classes.appbar}>\n            <Grid item container spacing={2} justify=\"space-between\">\n                {\n                    (user) ? (\n                        <Grid item>\n                            <Link to='/' style={{ textDecoration : \"none\" }}><IconButton><HomeIcon></HomeIcon></IconButton></Link>\n                            <IconButton><Link to=\"/\" style={{ color : \"inherit\"}}><ExitToAppIcon onClick={handleLogOut}></ExitToAppIcon></Link></IconButton>\n                            <Link to=\"/profile\" style={{ textDecoration : \"none\"}}><IconButton><FaceIcon></FaceIcon></IconButton></Link>\n                            <Link to=\"/addstore\" style={{ textDecoration : \"none\"}}><IconButton><AddCircleIcon></AddCircleIcon></IconButton></Link>\n                            <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                        </Grid>\n                    ) : (\n                        <Grid item>\n                            <Link to=\"/login\" style={{ textDecoration : \"none\"}}><Button className={classes.Button} variant=\"outlined\" color=\"default\" size=\"large\">Login</Button></Link>\n                            <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                        </Grid>\n                    )\n                }\n            </Grid>\n        </AppBar>\n        </Grid>\n        <Backdrop open={open} className={classes.backdrop}>\n            <Random CloseBackdrop={handleClose}/>\n        </Backdrop>\n        </>\n    )\n}\n\n","/Users/chenbairu/NTUEEat/src/containers/AddStore.js",["104","105","106","107","108","109","110","111"],"import { Component } from 'react';\nimport { uploadStoreInfo } from '../routes/routes';\nimport { TextField, MenuItem, FormLabel, Button, IconButton, Snackbar, Box, Grid, Paper, Typography} from '@material-ui/core';\nimport { regions, avgPrice, cuisines } from '../Constants';\nimport { FreeBreakfastOutlined, RedeemRounded} from '@material-ui/icons';\nimport Alert from '@material-ui/lab/Alert';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { Redirect } from 'react-router-dom'\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    root: {\n      backgroundColor: \"red\"\n    },\n    paper : {\n        padding : theme.spacing(4),\n        marginTop : theme.spacing(15)\n    },\n    paper2 : {\n        padding : theme.spacing(2),\n        margin : theme.spacing(1),\n        maxWidth : '100%',\n        maxHeight : '100%',\n    },\n    box : {\n        backgroundColor: \"#D4E6F1\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n    box2 : {\n        maxWidth : '40%',\n        maxHeight : '40%',\n    },\n    box3 : {\n        backgroundColor: \"#F2EDEB\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n    box4 : {\n        backgroundColor: \"#F7F0F5\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n});\n\n// Required: TextField, Select \nclass AddStore extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            urls: [],\n            restaurant: null,\n            phone: null,\n            dist: null,\n            address: null,\n            min: null,\n            max: null,\n            avg: null,\n            cuisine: null,\n            errormessage: null,\n            error : false,\n            success : false\n        }\n    }\n\n    handleChange = event => {\n        if (event.target.files){\n            const files = Array.from(event.target.files);\n           files.forEach(file => {\n               const reader = new FileReader();\n               reader.readAsDataURL(file);\n               reader.onloadend = () => {\n                   this.setState((prev) => ({\n                    urls: [...prev.urls, reader.result]\n                   }))\n               }\n           }); \n        }\n    }\n\n    handleValueChange = cap => {\n        const handleChange = event => {\n            const renew = new Object;\n            renew[cap] = event.target.value;\n            this.setState(renew);\n            console.log(this.state)\n        }\n        return handleChange;\n    }\n\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        const sendData = async () => {\n            const parsedData = { \n                images: this.state.urls \n            };\n            for (let [key, value] of Object.entries(this.state)) {\n                switch(key){\n                    case 'restaurant':\n                        parsedData.storename = value;\n                        break;\n                    case 'phone':\n                        parsedData.phone = value;\n                        break;\n                    case 'dist':\n                        parsedData.location = value;\n                        break;\n                    case 'address':\n                        parsedData.address = value;\n                        break;\n                    case 'min':\n                        if (value) parsedData.lowestPrice = value;\n                        break;\n                    case 'max':\n                        if (value) parsedData.highestPrice = value;\n                        break;\n                    case 'avg':\n                        parsedData.avgPrice = value;\n                        break;\n                    case 'cuisine':\n                        parsedData.type = value;\n                        break;\n                }\n            }\n            console.log(\"data: \", parsedData)\n            const res = await uploadStoreInfo(JSON.stringify(parsedData));\n            console.log(res)\n            // res should either be success or the error message\n            if(res === \"success\"){\n                this.setState({\n                    success : true\n                })\n            }else if(res !== \"success\"){\n                this.setState({\n                    error: true,\n                    errormessage : res\n                })\n            }\n            if (res == 'error') {\n                this.setState({\n                    errormessage: '系統出了一點問題QAQ 拜託再試一次Orz'\n                })\n            }\n        }\n        sendData();\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            error : false\n        })\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n            {(!this.state.success) ? (\n            <Paper className={classes.paper}>\n            <Box className={classes.box}><Typography variant=\"h3\">表單</Typography></Box>\n            <form onSubmit={this.handleSubmit}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"餐廳名稱\" variant=\"outlined\" autoFocus={true} onChange={this.handleValueChange('restaurant')} required/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"電話\" variant=\"outlined\" onChange={this.handleValueChange('phone')}/></Box></Grid>\n                \n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"區域\" variant=\"outlined\" onChange={this.handleValueChange('dist')} select>{regions.map(region => <MenuItem key={region} value={region}>{region}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"地址\" variant=\"outlined\" onChange={this.handleValueChange('address')} required/></Box></Grid>\n                \n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"最低品項單價\" variant=\"outlined\" onChange={this.handleValueChange('min')}/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"最高品項單價\" variant=\"outlined\" onChange={this.handleValueChange('max')}/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"平均價位\" variant=\"outlined\" onChange={this.handleValueChange('avg')} select required>{avgPrice.map(price => <MenuItem key={price} value={price}>{price}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"類別\" variant=\"outlined\" onChange={this.handleValueChange('cuisine')} select required>{cuisines.map(cuisine => <MenuItem key={cuisine} value={cuisine}>{cuisine}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={12}>\n                    <Box className={classes.box} justifyContent=\"center\">\n                        <div><Typography>上傳至少一張菜單圖片ㄅ～</Typography></div>\n                        <input name=\"file\" type=\"file\" onChange={this.handleChange} multiple={true} accept=\"image/\" required/>\n                    </Box>\n                <Grid item container>\n                    {this.state.urls.map(menu => \n                    <Grid item>\n                        <Paper className={classes.paper2} key={Date.now()}>\n                            <img className=\"menu\" src={menu}/>\n                        </Paper>\n                    </Grid>)\n                    }\n                </Grid>\n                <Grid item><Button type=\"submit\" variant=\"outlined\">送出</Button></Grid>\n                </Grid>\n                </Grid>\n            </form>\n            <Snackbar \n                anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                open={this.state.error} \n                onClose={this.handleSnackbarClose}\n                autoHideDuration={2000} \n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleSnackbarClose} >\n                        <HighlightOffIcon fontSize=\"small\"/>\n                    </IconButton>\n                }\n            >\n                <Alert severity=\"error\" onClose={this.handleSnackbarClose}>\n                {(this.state.error) ? `${this.state.errormessage}` : null}\n                </Alert>\n            </Snackbar>\n            </Paper>) : <Redirect to=\"/\" />\n            }\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(AddStore);","/Users/chenbairu/NTUEEat/src/Profile.js",["112","113"],"import { useState , useContext, useEffect} from 'react'\nimport userContext from './userContext'\nimport { Tabs, Tab , Typography, Avatar, Card, CardContent, Box,Button, IconButton, TextField, ButtonGroup, Paper} from '@material-ui/core'\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { blue } from \"@material-ui/core/colors\";\nimport { Link } from 'react-router-dom'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport axios from 'axios'\nimport RateStar from './components/store/Ratestar'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000/users\" })\n\nconst useStyle = makeStyles(theme => ({\n    AppBar : {\n        marginTop : theme.spacing(15),\n        marginLeft : theme.spacing(2),\n        marginRight : theme.spacing(2)\n    },\n    Tab : {\n        padding : theme.spacing(3),\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n    },\n    Avatar : {\n        margin : theme.spacing(5),\n        padding : theme.spacing(15)\n    },\n    username : {\n      paddingLeft : theme.spacing(4),\n      paddingTop : theme.spacing(2),\n      paddingBottom : theme.spacing(2)\n    },\n    Card : {\n      margin : theme.spacing(2),\n      padding : theme.spacing(4)\n    },\n    visit : {\n      margin : theme.spacing(2)\n    },\n    box1 : {\n      borderRadius:20,\n      padding : theme.spacing(1),\n    },\n    box2 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      padding : theme.spacing(2)\n    },\n    box3 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      width : '100%'\n    },\n    textfield : {\n      padding : theme.spacing(2),\n      borderRadius:20,\n      width : '95%'\n    },\n    button : {\n      margin : theme.spacing(2),\n    }\n}))\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiTabs: {\n        indicator: {\n          backgroundColor: blue[700]\n        }\n      },\n      MuiTab: {\n        root: {\n        },\n        selected: {\n          backgroundColor: blue[700],\n          color: blue[700],\n        }\n      }\n    },\n    typography: {\n      h1: {\n        fontSize: 18,\n      },\n      body1: {\n        fontWeight: 1000,\n      },\n      body2:{\n        fontWeight : 500\n      }\n    },\n  });\n\nfunction User() {\n    const classes = useStyle()\n    let {user, setUser} = useContext(userContext)\n    let [selectedTab, setSelectedTab] = useState(0)\n    let [comments, setComments] = useState()\n    let [favorites, setFavorites] = useState()\n    let [editComment, setEditComment] = useState()\n    let [updatedContent, setUpdatedContent] = useState()\n    let [updatedStar, setUpdatedStar] = useState()\n    useEffect(() => {\n      getFavorites()\n    },[])\n    const handleChange = (event, newValue) => {\n      setSelectedTab(newValue);\n    };\n    const getComments = async () => {\n      // returns entire user with comments populated\n      const {data} = await instance.get(`/comments/${user._id}`)\n      setComments([...data])\n      const array = data.map(comment => comment._id)\n      setUser(prev => {\n        return {\n          ...prev,\n          comments : [...array]\n        }\n      })\n    }\n    const getFavorites = async () => {\n      // returns entire user with favorites populated\n      const {data} = await instance.get(`/favorites/${user._id}`)\n      setFavorites([...data])\n      const array = data.map(fav => fav._id)\n      setUser(prev => {\n        return {\n          ...prev,\n          favorites : [...array]\n        }\n      })\n    }\n    const handleRemoveFavorite = async (e) => {\n      // returns entire user with favorites populated\n      const {data} = await instance.delete(`/favorite?USERID=${user._id}&STOREID=${e.target.id}`)\n      setFavorites([...data])\n      const array = data.map(fav => fav._id)\n      setUser(prev => {\n        return {\n          ...prev,\n          favorites : [...array]\n        }\n      })\n    }\n    const handleEditComment = async (e) => {\n      setEditComment(e.target.id)\n    }\n    const handleDeleteComment = async (e) => {\n      const {data} = await instance.delete(`/comments?USERID=${user._id}&COMMENTID=${e.target.id}`)\n      setComments([...data])\n      const array = data.map(comment => comment._id)\n      setUser(prev => {\n        return {\n          ...prev,\n          comments : [...array]\n        }\n      })\n    }\n    const handleSubmit = async () => {\n      // renew the comment\n      if(updatedStar && updatedContent){\n        // use the setEditComment to send the comment back\n        const {data} = await instance.post('/comments', {\n          _id : editComment,\n          content : updatedContent,\n          rating : updatedStar\n        })\n        setComments(prev => {\n          let newComments = prev.map(comment => {\n            if(comment._id === data._id){\n              comment.content = data.content\n              comment.rating = data.rating\n            }\n            return comment\n          })\n          return newComments\n        })\n      }\n      setEditComment(null)\n      setUpdatedContent('')\n      setUpdatedStar(null)\n    }\n    return(\n        <MuiThemeProvider theme={theme}>\n            <Paper \n            className={classes.AppBar}\n            indicatorColor=\"secondary\"\n            style={{ background : \"#D4E6F1\", color : \"#000000\" }}\n            position=\"static\">\n            {/* <Avatar className={classes.Avatar}>P</Avatar> */}\n            <Typography className={classes.username} variant=\"h3\" style={{color : \"#000000\"}}>{user.username}</Typography>\n            <Tabs value={selectedTab} onChange={handleChange}>\n                <Tab className={classes.Tab} value={0} label=\"Favorites\" onClick={getFavorites}/>\n                <Tab className={classes.Tab} value={1} label=\"Reviews\" onClick={getComments}/>\n                <Tab className={classes.Tab} value={2} label=\"Settings\"/>\n            </Tabs>\n            </Paper>\n            {(selectedTab === 0 && favorites) ? (\n              favorites.map(store => {\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Typography style={{ display: 'inline-block' }} >{store.storename}</Typography>\n                      <Link style={{textDecoration : \"none\"}}to={`/store/${store._id}`}>\n                        <Button className={classes.visit}variant=\"outlined\">Visit</Button>\n                      </Link>\n                      <IconButton onClick={(e) => {handleRemoveFavorite(e)}}>\n                        <RemoveCircleOutlineIcon style={{ display: 'inline-block' }} id={store._id}></RemoveCircleOutlineIcon>\n                      </IconButton>\n                    </CardContent>\n                  </Card>)\n              })) : null}\n            {(selectedTab === 1 && comments) ? (\n              comments.map(comment => {\n                if(editComment===comment._id){\n                  return(\n                    <>\n                    <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <RateStar handleSelectRate={setUpdatedStar}/>\n                      </Box>\n                      <Box className={classes.box3}>\n                      <TextField  className={classes.textfield}value={updatedContent} onChange={(e)=>setUpdatedContent(e.target.value)}></TextField>\n                      <Button className={classes.button} onClick={handleSubmit}>Update</Button>\n                      </Box>\n                    </CardContent>\n                    </Card>\n                    </>\n                  )\n                }\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <Typography style={{ display : 'inline-block'}} variant=\"body2\">{`rating : ${comment.rating}`}</Typography>\n                      </Box>\n                      <Box className={classes.box2}>\n                      <Typography style={{ display : 'block'}} variant=\"body2\">{comment.content}</Typography>\n                      </Box>\n                      <Box className={classes.box1}>\n                        <ButtonGroup>\n                        <IconButton onClick={(e) => {handleEditComment(e)}}><EditIcon id={comment._id}></EditIcon></IconButton>\n                        <IconButton onClick={(e) => {handleDeleteComment(e)}}><DeleteIcon id={comment._id}></DeleteIcon></IconButton>\n                        </ButtonGroup>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                )\n              })\n            ) : null}\n        </MuiThemeProvider>\n    )\n}\nexport default User;","/Users/chenbairu/NTUEEat/src/containers/storeContainer.js",["114","115","116","117","118","119"],"import { fetchStoreData } from '../routes/routes'\nimport BasicInfo from '../components/store/BasicInfo';\nimport Review from '../components/store/Review';\nimport { useEffect, useState } from 'react';\nimport {Paper, makeStyles, Grid} from '@material-ui/core'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n  } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n    paper : {\n        marginTop : theme.spacing(20),\n        marginLeft : theme.spacing(5),\n        marginRight : theme.spacing(2),\n        marginButtom: theme.spacing(3)\n    },\n    grid : {\n        marginLeft : theme.spacing(0),\n        marginRight : theme.spacing(0),\n        maxWidth: 360,\n        width: '100%',\n    }\n}))\nfunction StoreContainer () {\n    const classes = useStyles()\n    let data;\n    const [ basicInfo, setBasicInfo ] = useState(null)\n    const [ review, setReview ] = useState(null)\n    const { id } = useParams();\n    console.log(\"slug\",id);\n\n    useEffect(async () => {\n        const data = await fetchStoreData(id);\n        console.log(\"id: \", data._id)\n        setBasicInfo({\n            storeName: data.storename,\n            address: data.address,\n            phone: data.phone,\n            menus: data.picture\n        })\n        setReview({\n            storename: data.storename,\n            storeId: data._id,\n            rating: data.rating,\n            comments: data.comments\n        })\n    },[id])\n    //const data = await fetchStoreData('6002e4d7d31a19a31b19086f');\n    //console.log(\"data: \", data)\n    if (data !== \"error\"){\n        \n        //console.log(basicInfo, review)\n        return (\n        <div>\n            <Grid container>\n                <Grid item className={classes.grid}>\n                    <Paper className={classes.paper}>\n                        <BasicInfo data={basicInfo && basicInfo}/>\n                        <Review data={review&&review}/>\n                    </Paper>\n                </Grid>\n\n                ////map\n                <Grid item >\n                    \n                </Grid>\n\n            </Grid>\n            \n                \n                \n        </div>\n        )\n    }\n    \n}\n\nexport default StoreContainer;","/Users/chenbairu/NTUEEat/src/main/Navbar.js",["120","121","122","123"],"import axios from 'axios'\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, {useState, useContext, useEffect} from \"react\";\nimport Random from './Random'\nimport {Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper, Box} from '@material-ui/core';\nimport userContext from '../userContext'\nimport './Navbar.css';\n\n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n        flexGrow: 1,\n        // position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    FormControl:{\n        margin:theme.spacing(5),\n        minWidth:280,\n        minHeight:3,\n        alignSelf: 'flex-end',\n        flexGrow: 1,\n        \n    },\n    toolbar: {\n        minHeight: 128,\n        alignItems: 'fixed-end',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(2),\n    },\n    button:{\n        marginLeft : theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    Avatar:{\n        margin:theme.spacing(0),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paper : {\n        marginTop : theme.spacing(16),\n        marginRight : theme.spacing(2),\n        marginLeft : theme.spacing(2),\n        padding : theme.spacing(2)\n    },\n    box2 : {\n        margin : theme.spacing(2),\n        backgroundColor: \"#D4E6F1\",\n        borderRadius:20,\n        padding : theme.spacing(2)\n    },\n}))\n\nexport default function Navbar({Local,Price,Prefer,Submit,search,handleSearch,handlesetSearch}){\n    let {user} = useContext(userContext)\n    const classes=useStyles();\n   \n    const[open, setOpen] = useState(false)\n    // const[search, setSearch] = useState('')\n    const handleChangelocal= e =>{\n        Local(e.target.value)\n    };\n    const handleChangeprice= e =>{\n        Price(e.target.value)\n    };\n    const handleChangeprefer= e =>{\n        Prefer(e.target.value)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleSetSearch = (e) => {\n        handlesetSearch(e.target.value)\n    }\n   \n    \n    {console.log(\"search\",search);}\n    return(\n        <Grid container>\n            <Paper className={classes.paper}>\n                <Box className={classes.box2}>\n                <Grid item container>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl}>\n                        <InputLabel>location</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-location\"\n                        id=\"location-select\"\n                        displayEmpty\n                        // value={location}\n                        onChange={handleChangelocal}\n                        >\n                            {/* <MenuItem value=\"\">Empty</MenuItem> */}\n                            <MenuItem value={\"118\"}>118</MenuItem>\n                            <MenuItem value={\"公館\"}>公館</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Price</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-price\"\n                        id=\"price-select\"\n                        displayEmpty\n                        // value={price}\n                        onChange={handleChangeprice}\n                        >\n                            {/* <MenuItem value={\"\"}>Empty</MenuItem> */}\n                            <MenuItem value={\"$\"}>$</MenuItem>\n                            <MenuItem value={\"$$\"}>$$</MenuItem>\n                            <MenuItem value={\"$$$\"}>$$$</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Preference</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-prefer\"\n                        id=\"prefer-select\"\n                        displayEmpty\n                        // value={prefer}\n                        onChange={handleChangeprefer}\n                        >\n                            {/* <MenuItem value={\"\"}>Empty</MenuItem> */}\n                            <MenuItem value={\"韓式\"} >韓式</MenuItem>\n                            <MenuItem value={\"壽司\"}>壽司</MenuItem>\n                            <MenuItem value={\"牛肉麵\"}>牛肉麵</MenuItem>\n                            <MenuItem value={\"泰式\"}>泰式</MenuItem>\n                            <MenuItem value={\"咖哩\"}>咖哩</MenuItem>\n                            <MenuItem value={\"義大利麵\"}>義大利麵</MenuItem>\n                        </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={Submit}>Submit</Button>\n                    </Grid>\n                </Grid>\n                </Box>\n                    <Grid item xs={4}>\n                        <Box className={classes.box2}>\n                            <TextField value={search} variant=\"outlined\" label=\"Restaurant name\" onChange={(e) => handleSetSearch(e)}></TextField>\n                            \n                            <Button className={classes.button} onClick={handleSearch}>Search</Button>\n                        </Box>\n                    </Grid>\n            </Paper>\n            <Backdrop open={open} className={classes.backdrop}>\n                <Random CloseBackdrop={handleClose}/>\n            </Backdrop>\n        </Grid>\n       \n    )\n}\n\n","/Users/chenbairu/NTUEEat/src/main/StoreList.js",["124","125","126","127","128","129","130","131","132","133","134"],"import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedCard from \"./OutlinedCard\"\nimport { Grid, Paper } from '@material-ui/core';\nimport  { uploadStoreInfo, fetchStoreData } from \"../routes/routes\";\nimport axios from \"axios\";\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom' \n\nconst instance = axios.create({baseURL : \"http://localhost:4000\"});\n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n      minWidth: 275,\n    },\n    title: {\n      fontSize: 14,\n    },  \n  }));\n  \nexport default function StoreList(props){\n    const classes = useStyles();\n    // useEffect(async ()=>{\n    //   const {favorIddata}= await instance.post(\"/users/favorite\")\n    //   // favorIddata.map(_id=>{\n    //   //   const {data} = await instance.get(\"/users/favorites/${favorstore_id}\");\n    //   // })\n      \n    //   console.log(\"getuser\",data);\n      // if(data.msg){\n      //   setContents(null)\n      // }else if(data.Error){\n      //   console.log(data.Error)\n      // }else{\n      //   setContents(data);\n      // }\n     \n    // },[])\n  \n    return( \n        <>\n        <Paper>\n        <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={6}  >\n          {props.data ? \n          props.data.map(item=>\n            // <Link to ={`/store/${item._id}`} style={{textDecoration:\"none\"}}>\n              <OutlinedCard data={item} key={item._id} />  \n            // </Link>\n            )\n            : null\n          }          \n        </Grid>\n        <Grid item xs>\n          {/* <Favorite/> */}\n        </Grid>\n      </Grid>\n      </Paper>\n        </>\n    )\n}\n","/Users/chenbairu/NTUEEat/src/Constants.js",[],"/Users/chenbairu/NTUEEat/src/routes/routes.js",["135"],"const axios = require('axios');\n\nconst instance = axios.create({baseURL : \"http://localhost:4000\"});\n\n// AddStore\nconst uploadStoreInfo = async (encodedFiles) => {\n    let response;\n    await instance.post('/stores/addstore', \n        encodedFiles,\n        { headers : {'Content-Type' : 'application/json'} }\n    )\n    .then(res => {\n        console.log(res.data)\n        if(res.data){\n            response = res.data.error\n            console.log(response)\n        }else{\n            response = 'success'\n        }\n    })\n    .catch(err => {\n        console.error('Error : ', err)\n        response='error'\n    });\n    return response;\n}\n\n// Store\nconst fetchStoreData = async (storeId) => {\n    let response;\n    await instance.get(`/stores/store/${storeId}`)\n    .then(res => {\n        response = res.data;\n    })\n    .catch(err => { \n        console.error('Error : ',err)\n        response = \"error\" \n    })\n    return response;\n}\n\n// Comment\nconst sendComment = async (data) => {\n    let response;\n    console.log(data)\n    await instance.post(`/stores/store/${data.storeid}`, data)\n    .then(res => {response = res})\n    .catch(err => {\n        throw err\n    })\n}\n\nexport { uploadStoreInfo, fetchStoreData, sendComment };\n","/Users/chenbairu/NTUEEat/src/components/store/Ratestar.js",[],"/Users/chenbairu/NTUEEat/src/components/store/BasicInfo.js",["136","137","138","139","140","141"],"import { useState } from 'react';\nimport { List, ListItem, ListItemIcon, ListItemText, GridList, GridListTile, Backdrop, ButtonBase, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => (\n    {\n        infoList: {\n            // display: 'inline-flex',\n            flexWrap: 'wrap',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        menuGrid: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '100%'\n        },\n        imageContainer: {\n            position: 'relative',\n            border: '5px',\n            height: 100,\n            '&:hover': {\n                cursor: 'pointer',\n            }\n        },\n        imageButton: {\n            position: 'absolute',\n            height: '100%',\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center'\n\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff'\n        },\n        divider:{\n            display: 'flex',\n            flexWrap: 'wrap',\n            marginTop : theme.spacing(1),\n            // marginBottom : theme.spacing(1),\n            // width: '175%'\n\n        },\n    }\n));\n\nfunction TogglePic() {\n    //const [ open, setOpen ] = useState(false)\n    return useState(false);\n}\n// Backdrop\nfunction BasicInfo (props) {\n    const classes = useStyles();\n    function MenuGrid (props) {\n        return (\n            <div className={classes.menuGrid}>\n                {props.data && props.data.menus.map(menu => {\n                    const [ open, setOpen ] = TogglePic();\n                    // console.log(menu)\n                    return (\n                        <div key={Date.now()+ Math.random()}>\n                            <ButtonBase\n                                onClick={() => setOpen(true)}\n                            >\n                                <div className={classes.imageContainer} >\n                                    <img src={menu} style={{height: '100%'}}/>\n                                </div>\n                            </ButtonBase>\n\n                            <Backdrop className={classes.backdrop} open={open} onClick={() => setOpen(false)}>\n                                <img src={menu}/>\n                            </Backdrop>\n                            \n                        </div>\n                    )\n                })}\n            </div>     \n        )\n    }\n    return (\n        <div className={classes.infoList}>\n            <List>\n                <ListItem>\n                <ListItemIcon>\n                    <RestaurantIcon />\n                </ListItemIcon>\n                <ListItemText primary={props.data&&props.data.storeName} />\n                </ListItem>\n                {/* <Divider light className={classes.divider}/> */}\n                <ListItem>\n                    <ListItemIcon>\n                        <RoomIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={props.data&&props.data.address} />\n                </ListItem>\n                {/* <Divider light className={classes.devider}/> */}\n                <ListItem>\n                    <ListItemIcon>\n                        <PhoneIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={props.data&&props.data.phone} />\n                </ListItem>\n                \n                \n                <Divider light variant=\"middle\" className={classes.divider}/>\n            </List>\n            \n            <MenuGrid data={props.data}/>\n\n            <Divider light variant=\"middle\" className={classes.divider}/>\n        </div>\n    )\n}\n\nexport default BasicInfo;","/Users/chenbairu/NTUEEat/src/components/store/Review.js",["142","143","144","145"],"import React, { useState, useEffect, useContext } from 'react';\nimport userContext from '../../userContext';\nimport { sendComment } from '../../routes/routes';\nimport { TextField, IconButton, Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport RateStar from './Ratestar'\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '10px',\n    },\n    commentList: {\n        overflow: 'scroll'\n    },\n    inlineStar: {\n        display: 'inline'\n    },\n    typeInComment: {\n        \n    }\n}));\n\n\n\n\n\nfunction Review (props) {\n    const classes = useStyles();\n    let { user } = useContext(userContext);\n    //const { rating, comments } = props.data;\n    function CommentedBox (props) {\n        return (\n            <ListItem key={Date.now() + Math.random()}>\n                <ListItemAvatar>\n                    <Avatar src=\"\"/>\n                </ListItemAvatar>\n                    <ListItemText \n                        primary={props.username}\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    className={classes.inlineStar}\n                                    color=\"textPrimary\"\n                                >\n                                    {props.rating}<StarIcon/>\n                                </Typography>\n                                {props.content}\n                            </React.Fragment>\n                        }\n                    />\n                \n            </ListItem>\n        )\n    }\n    function TypeIn () {\n        const [ rate, setRate ] = useState(0);\n        const [ typeIn, setTypeIn ] = useState('');\n        const handleChange = event => {\n            setTypeIn(event.target.value);\n        }\n        const handleSubmit = async () => {\n            if (rate === 0) {\n                alert('請給至少一顆星星的評價ㄛ');\n            } else if(typeIn.length === 0) {\n                alert('請至少輸入一個字的評論ㄛ');\n            } else {\n                console.log('storeid: ', props.data.storeId)\n                const data = {\n                    storename: props.data.storename,\n                    username: user.username,\n                    content: typeIn,\n                    rating: rate,\n                    storeid: props.data.storeId\n                }\n                try {\n                    await sendComment(data)\n                } catch (e) {\n                    throw e\n                }\n            }\n        }\n        return (\n            user? <div className={classes.typeInComment}>\n                <div style={{display: 'flex'}}>\n                    <Avatar style={{right: '5px'}} src=\"\"/>\n                    <div>\n                        <span style={{display: 'block'}}>{user.username}</span>\n                        <RateStar \n                            handleSelectRate={setRate}\n                            style={{display: 'block'}}\n                        />\n                    </div>\n                </div>\n                \n                <TextField onChange={handleChange} value={typeIn}/>\n                <IconButton onClick={handleSubmit}>\n                    <SendIcon />\n                </IconButton>\n            </div> : <div>先登入才可以評論ㄛ～</div>\n        )\n    }\n    // remain: avatar\n    function Comments () {\n        return (\n            <List className={classes.commentList}>\n                {props.data&&\n                props.data.comments.map(comment => <CommentedBox username={comment.username} rating={comment.rating} content={comment.content} />)}\n            </List>\n        )\n        \n    }\n    return ( \n        <div className={classes.root}>\n            \n            <TypeIn />\n            <Comments />\n        </div>\n    )\n}\n\nexport default Review;","/Users/chenbairu/NTUEEat/src/main/OutlinedCard.js",["146","147","148","149","150","151","152","153","154","155"],"import React, { useState , useContext,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport StarIcon from '@material-ui/icons/Star';\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom' \n\nimport axios from \"axios\"\nimport userContext from '../userContext'\nimport { Box } from '@material-ui/core';\nconst instance = axios.create({ baseURL : \"http://localhost:4000/\"});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    margin : theme.spacing(2),\n    padding : theme.spacing(2)\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles();\n  const[check, setCheck]=useState(null)\n  const[firstcheck,setFirstcheck]=useState(false)\n  let {user, setUser} = useContext(userContext)\n  \n  const Favorite = async() => {\n  if(user && !firstcheck){\n    const {data}= await instance.post(\"/users/favorite\",{ \n      userID : user._id,\n      storeID : props.data._id\n    })\n    const array = data.map(fav => fav._id)\n    setUser(prev => {\n      return {\n        ...prev,\n        favorites : [...array]\n      }\n    })\n  }else{\n    console.log(\"Login ,please\");\n  }\n  }\n  const UnFavorite=async()=>{\n    if(user){\n      const {data}= await instance.delete(`/users/favorite?USERID=${user._id}&STOREID=${props.data._id}`)\n      console.log(\"userdata\",data);\n      const array = data.map(fav => fav._id)\n      setUser(prev => {\n        return {\n          ...prev,\n          favorites : [...array]\n        }\n      })\n    }else{\n      console.log(\"Login ,please\");\n    }\n  }\n  useEffect(async()=>{\n    if(user){\n      user.favorites.map(favor_id=>{if(props.data._id===favor_id){\n        setCheck(true);\n        setFirstcheck(true)}})\n    }\n  },[])\n  useEffect(async()=>{\n    if(user){\n      if(check !== null){\n        check ? Favorite() : UnFavorite()\n      }\n      // console.log(\"check\",check);\n    // }else{\n    //   // setCheck(false)\n    }\n  },[check])\n\n    return (\n    <Card className={classes.root} variant=\"outlined\">\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={2} justify=\"space-between\">\n          <Grid item>\n            <Link to ={`/store/${props.data._id}`} style={{textDecoration:\"none\",color:\"black\"}} >\n              <Typography variant=\"h5\" component=\"h2\">\n                {props.data.storename}\n              </Typography>\n            </Link>\n          </Grid>\n\n          <Grid item>\n              <IconButton aria-label=\"add to favorites\" onClick={() => setCheck(!check)} disabled={!user}>\n                { check ?\n                  <FavoriteIcon id={props.data._id} color='error'/> :\n                  <FavoriteIcon />\n                }\n              </IconButton>\n            </Grid>\n\n          <Grid item container>\n            <Grid item>\n              <StarIcon></StarIcon>\n            </Grid>\n            <Grid item>\n              <Typography>\n              {props.rating? (`${props.props.rating} : `): 0 }\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n    </Card>\n  )\n\n  \n}\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":46,"column":10,"nodeType":"162","messageId":"163","endLine":46,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":141,"column":25,"nodeType":"166","endLine":141,"endColumn":42},{"ruleId":"160","severity":1,"message":"167","line":2,"column":42,"nodeType":"162","messageId":"163","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"168","line":21,"column":8,"nodeType":"162","messageId":"163","endLine":21,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":49,"column":13,"nodeType":"171","endLine":59,"endColumn":4},{"ruleId":"160","severity":1,"message":"172","line":6,"column":32,"nodeType":"162","messageId":"163","endLine":6,"endColumn":43},{"ruleId":"160","severity":1,"message":"173","line":6,"column":45,"nodeType":"162","messageId":"163","endLine":6,"endColumn":55},{"ruleId":"160","severity":1,"message":"174","line":6,"column":69,"nodeType":"162","messageId":"163","endLine":6,"endColumn":78},{"ruleId":"160","severity":1,"message":"175","line":6,"column":86,"nodeType":"162","messageId":"163","endLine":6,"endColumn":91},{"ruleId":"160","severity":1,"message":"176","line":14,"column":8,"nodeType":"162","messageId":"163","endLine":14,"endColumn":16},{"ruleId":"160","severity":1,"message":"177","line":3,"column":31,"nodeType":"162","messageId":"163","endLine":3,"endColumn":40},{"ruleId":"160","severity":1,"message":"178","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":31},{"ruleId":"160","severity":1,"message":"179","line":5,"column":33,"nodeType":"162","messageId":"163","endLine":5,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":89,"column":27,"nodeType":"182","messageId":"183","endLine":89,"endColumn":37,"fix":"184"},{"ruleId":"185","severity":1,"message":"186","line":89,"column":27,"nodeType":"182","messageId":"187","endLine":89,"endColumn":37},{"ruleId":"188","severity":1,"message":"189","line":104,"column":17,"nodeType":"190","messageId":"191","endLine":129,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":145,"column":21,"nodeType":"194","messageId":"195","endLine":145,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":187,"column":29,"nodeType":"166","endLine":187,"endColumn":63},{"ruleId":"160","severity":1,"message":"196","line":3,"column":34,"nodeType":"162","messageId":"163","endLine":3,"endColumn":40},{"ruleId":"169","severity":1,"message":"197","line":107,"column":7,"nodeType":"198","endLine":107,"endColumn":9,"suggestions":"199"},{"ruleId":"160","severity":1,"message":"200","line":7,"column":22,"nodeType":"162","messageId":"163","endLine":7,"endColumn":28},{"ruleId":"160","severity":1,"message":"201","line":8,"column":5,"nodeType":"162","messageId":"163","endLine":8,"endColumn":11},{"ruleId":"160","severity":1,"message":"202","line":9,"column":5,"nodeType":"162","messageId":"163","endLine":9,"endColumn":10},{"ruleId":"160","severity":1,"message":"203","line":10,"column":5,"nodeType":"162","messageId":"163","endLine":10,"endColumn":9},{"ruleId":"169","severity":1,"message":"170","line":35,"column":15,"nodeType":"171","endLine":50,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":64,"column":24,"nodeType":"206","endLine":67,"endColumn":17},{"ruleId":"160","severity":1,"message":"207","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"208","line":5,"column":38,"nodeType":"162","messageId":"163","endLine":5,"endColumn":47},{"ruleId":"160","severity":1,"message":"168","line":59,"column":10,"nodeType":"162","messageId":"163","endLine":59,"endColumn":14},{"ruleId":"209","severity":1,"message":"210","line":81,"column":5,"nodeType":"211","messageId":"212","endLine":81,"endColumn":36},{"ruleId":"160","severity":1,"message":"213","line":1,"column":15,"nodeType":"162","messageId":"163","endLine":1,"endColumn":23},{"ruleId":"160","severity":1,"message":"208","line":1,"column":24,"nodeType":"162","messageId":"163","endLine":1,"endColumn":33},{"ruleId":"160","severity":1,"message":"214","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"215","line":6,"column":11,"nodeType":"162","messageId":"163","endLine":6,"endColumn":26},{"ruleId":"160","severity":1,"message":"216","line":6,"column":28,"nodeType":"162","messageId":"163","endLine":6,"endColumn":42},{"ruleId":"160","severity":1,"message":"200","line":9,"column":20,"nodeType":"162","messageId":"163","endLine":9,"endColumn":26},{"ruleId":"160","severity":1,"message":"201","line":10,"column":3,"nodeType":"162","messageId":"163","endLine":10,"endColumn":9},{"ruleId":"160","severity":1,"message":"202","line":11,"column":3,"nodeType":"162","messageId":"163","endLine":11,"endColumn":8},{"ruleId":"160","severity":1,"message":"203","line":12,"column":3,"nodeType":"162","messageId":"163","endLine":12,"endColumn":7},{"ruleId":"160","severity":1,"message":"217","line":15,"column":7,"nodeType":"162","messageId":"163","endLine":15,"endColumn":15},{"ruleId":"160","severity":1,"message":"218","line":27,"column":11,"nodeType":"162","messageId":"163","endLine":27,"endColumn":18},{"ruleId":"160","severity":1,"message":"219","line":47,"column":19,"nodeType":"162","messageId":"163","endLine":47,"endColumn":27},{"ruleId":"160","severity":1,"message":"220","line":2,"column":54,"nodeType":"162","messageId":"163","endLine":2,"endColumn":62},{"ruleId":"160","severity":1,"message":"221","line":2,"column":64,"nodeType":"162","messageId":"163","endLine":2,"endColumn":76},{"ruleId":"160","severity":1,"message":"214","line":2,"column":100,"nodeType":"162","messageId":"163","endLine":2,"endColumn":106},{"ruleId":"160","severity":1,"message":"175","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":76,"column":37,"nodeType":"166","endLine":76,"endColumn":79},{"ruleId":"164","severity":1,"message":"165","line":81,"column":33,"nodeType":"166","endLine":81,"endColumn":50},{"ruleId":"160","severity":1,"message":"208","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"222","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":22},{"ruleId":"160","severity":1,"message":"223","line":10,"column":8,"nodeType":"162","messageId":"163","endLine":10,"endColumn":20},{"ruleId":"160","severity":1,"message":"224","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":26},{"ruleId":"160","severity":1,"message":"214","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},{"ruleId":"160","severity":1,"message":"200","line":11,"column":20,"nodeType":"162","messageId":"163","endLine":11,"endColumn":26},{"ruleId":"160","severity":1,"message":"201","line":12,"column":3,"nodeType":"162","messageId":"163","endLine":12,"endColumn":9},{"ruleId":"160","severity":1,"message":"202","line":13,"column":3,"nodeType":"162","messageId":"163","endLine":13,"endColumn":8},{"ruleId":"160","severity":1,"message":"225","line":19,"column":10,"nodeType":"162","messageId":"163","endLine":19,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":74,"column":13,"nodeType":"171","endLine":80,"endColumn":4},{"ruleId":"226","severity":1,"message":"227","line":76,"column":34,"nodeType":"171","messageId":"228","endLine":76,"endColumn":36},{"ruleId":"169","severity":1,"message":"229","line":80,"column":5,"nodeType":"198","endLine":80,"endColumn":7,"suggestions":"230"},{"ruleId":"169","severity":1,"message":"170","line":81,"column":13,"nodeType":"171","endLine":90,"endColumn":4},{"ruleId":"169","severity":1,"message":"231","line":90,"column":5,"nodeType":"198","endLine":90,"endColumn":12,"suggestions":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dialog' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'foodIcon' is defined but never used.","'FormLabel' is defined but never used.","'FreeBreakfastOutlined' is defined but never used.","'RedeemRounded' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"235","text":"236"},"no-new-object","The object literal notation {} is preferrable.","preferLiteral","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'getFavorites'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'axios' is defined but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'Button' is defined but never used.","'uploadStoreInfo' is defined but never used.","'fetchStoreData' is defined but never used.","'instance' is assigned a value but never used.","'classes' is assigned a value but never used.","'response' is assigned a value but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'StarBorderIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'Box' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'props.data._id' and 'user'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'Favorite', 'UnFavorite', and 'user'. Either include them or remove the dependency array.",["239"],"no-global-assign","no-unsafe-negation",[2576,2576],"()",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [getFavorites]",{"range":"246","text":"247"},"Update the dependencies array to be: [props.data._id, user]",{"range":"248","text":"249"},"Update the dependencies array to be: [Favorite, UnFavorite, check, user]",{"range":"250","text":"251"},[2838,2840],"[getFavorites]",[2110,2112],"[props.data._id, user]",[2316,2323],"[Favorite, UnFavorite, check, user]"]