[{"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/index.js":"1","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/reportWebVitals.js":"2","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/App.js":"3","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/ImageForm.js":"4","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/StoreMap.js":"5"},{"size":500,"mtime":1607752868144,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607517413848,"results":"8","hashOfConfig":"7"},{"size":298,"mtime":1607752911145,"results":"9","hashOfConfig":"7"},{"size":2115,"mtime":1607741889586,"results":"10","hashOfConfig":"7"},{"size":1930,"mtime":1607752927002,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qq9xs0",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/index.js",[],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/reportWebVitals.js",[],["24","25"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/App.js",["26"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/ImageForm.js",["27","28"],"import { useEffect, useState} from 'react'\nconst axios = require('axios')\nconst instance = axios.create({baseURL : \"http://localhost:4000\"})\n\n\nfunction ImageForm() {\n  let [previewSource, setPreviewSource] = useState('');\n  let [selectedFiles, setSelectedFiles] = useState([]);\n  let [encodedFiles, setEncodedFiles] = useState([]);\n\n  const handleFileInputChange= async (e) =>ã€€{\n    const fileList = e.target.files;\n    const files = Array.from(fileList);\n    const array = [];\n    previewFiles(files, array);\n    setSelectedFiles(files);\n    setPreviewSource(array);\n  }\n\n  const previewFiles = (files, array) => {\n      files.forEach(file => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n          setPreviewSource(prev => [...prev, reader.result])\n        }\n      })\n  }\n  \n  const handleSubmitFiles = (e) => {\n    e.preventDefault();\n    if(!selectedFiles) return;\n    selectedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        setEncodedFiles(files => [...files, reader.result]);\n      }\n    })\n  }\n\n  useEffect( () => {\n    if(selectedFiles.length === encodedFiles.length \n      && encodedFiles.length !== 0){\n      uploadImages();\n    }\n  }, [encodedFiles])\n\n  const uploadImages = async () => {\n    const res = await instance.post('/stores/addstore', \n    { images : encodedFiles }, // encodedFiles is an array of JSON.strigifys\n    { headers : {'Content-Type' : 'application/json'} })\n    setPreviewSource('');\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmitFiles}>\n        <input \n          type=\"file\" \n          name=\"images\" \n          multiple\n          onChange={e => {handleFileInputChange(e)}} \n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      { previewSource ? previewSource.map(\n        src => {\n          return (<img key={src} src={src} \n            alt=\"chosen\" \n            style={{ height : '300px'}}/>\n          )\n        }\n      )\n        : null\n      }\n    </>\n  )\n}\n\nexport default ImageForm;\n","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/StoreMap.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":17},{"ruleId":"37","severity":1,"message":"38","line":47,"column":6,"nodeType":"39","endLine":47,"endColumn":20,"suggestions":"40"},{"ruleId":"33","severity":1,"message":"41","line":50,"column":11,"nodeType":"35","messageId":"36","endLine":50,"endColumn":14},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'ImageForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedFiles.length' and 'uploadImages'. Either include them or remove the dependency array.","ArrayExpression",["44"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [encodedFiles, selectedFiles.length, uploadImages]",{"range":"47","text":"48"},[1303,1317],"[encodedFiles, selectedFiles.length, uploadImages]"]