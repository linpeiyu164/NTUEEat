<<<<<<< HEAD
[{"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/index.js":"1","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/reportWebVitals.js":"2","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/App.js":"3","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Register.js":"4","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/main/Navbar.js":"5","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Ratestar.js":"6","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/main/addStore.js":"7","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/containers/AddStore.js":"8","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/containers/storeContainer.js":"9","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Constants.js":"10","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/routes/routes.js":"11","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/components/store/BasicInfo.js":"12","/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/components/store/Review.js":"13"},{"size":578,"mtime":1610876168976,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607517413848,"results":"16","hashOfConfig":"15"},{"size":1232,"mtime":1610876623551,"results":"17","hashOfConfig":"15"},{"size":4822,"mtime":1610804053862,"results":"18","hashOfConfig":"15"},{"size":7572,"mtime":1610804053868,"results":"19","hashOfConfig":"15"},{"size":1389,"mtime":1610797729868,"results":"20","hashOfConfig":"15"},{"size":3252,"mtime":1610849415488,"results":"21","hashOfConfig":"15"},{"size":8714,"mtime":1610876168976,"results":"22","hashOfConfig":"15"},{"size":763,"mtime":1610855806130,"results":"23","hashOfConfig":"15"},{"size":260,"mtime":1610849415485,"results":"24","hashOfConfig":"15"},{"size":1114,"mtime":1610849415488,"results":"25","hashOfConfig":"15"},{"size":2860,"mtime":1610876924155,"results":"26","hashOfConfig":"15"},{"size":2923,"mtime":1610849415486,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qq9xs0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/index.js",["55"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/reportWebVitals.js",[],["56","57"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/App.js",["58","59","60","61","62","63","64","65","66","67","68","69","70"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Register.js",["71","72"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/main/Navbar.js",["73","74","75","76","77","78"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Ratestar.js",[],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/main/addStore.js",["79","80","81","82","83","84","85"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/containers/AddStore.js",["86","87","88","89","90","91","92","93"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/containers/storeContainer.js",[],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/Constants.js",[],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/routes/routes.js",[],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/components/store/BasicInfo.js",["94","95","96","97","98"],"/Users/macbookpro/Desktop/webprogramming/NTUEEat/src/components/store/Review.js",["99","100","101","102","103","104","105","106"],{"ruleId":"107","severity":1,"message":"108","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":16},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"108","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":16},{"ruleId":"107","severity":1,"message":"115","line":8,"column":20,"nodeType":"109","messageId":"110","endLine":8,"endColumn":26},{"ruleId":"107","severity":1,"message":"116","line":9,"column":3,"nodeType":"109","messageId":"110","endLine":9,"endColumn":9},{"ruleId":"107","severity":1,"message":"117","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":8},{"ruleId":"107","severity":1,"message":"118","line":11,"column":3,"nodeType":"109","messageId":"110","endLine":11,"endColumn":7},{"ruleId":"107","severity":1,"message":"119","line":13,"column":10,"nodeType":"109","messageId":"110","endLine":13,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":14,"column":8,"nodeType":"109","messageId":"110","endLine":14,"endColumn":13},{"ruleId":"107","severity":1,"message":"121","line":15,"column":8,"nodeType":"109","messageId":"110","endLine":15,"endColumn":14},{"ruleId":"107","severity":1,"message":"122","line":19,"column":10,"nodeType":"109","messageId":"110","endLine":19,"endColumn":15},{"ruleId":"107","severity":1,"message":"123","line":19,"column":17,"nodeType":"109","messageId":"110","endLine":19,"endColumn":25},{"ruleId":"107","severity":1,"message":"124","line":20,"column":10,"nodeType":"109","messageId":"110","endLine":20,"endColumn":18},{"ruleId":"107","severity":1,"message":"125","line":20,"column":20,"nodeType":"109","messageId":"110","endLine":20,"endColumn":31},{"ruleId":"107","severity":1,"message":"126","line":21,"column":12,"nodeType":"109","messageId":"110","endLine":21,"endColumn":17},{"ruleId":"107","severity":1,"message":"127","line":46,"column":10,"nodeType":"109","messageId":"110","endLine":46,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":141,"column":25,"nodeType":"130","endLine":141,"endColumn":42},{"ruleId":"107","severity":1,"message":"131","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":24},{"ruleId":"107","severity":1,"message":"132","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":16},{"ruleId":"107","severity":1,"message":"115","line":13,"column":22,"nodeType":"109","messageId":"110","endLine":13,"endColumn":28},{"ruleId":"107","severity":1,"message":"116","line":14,"column":5,"nodeType":"109","messageId":"110","endLine":14,"endColumn":11},{"ruleId":"107","severity":1,"message":"117","line":15,"column":5,"nodeType":"109","messageId":"110","endLine":15,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":82,"column":25,"nodeType":"130","endLine":82,"endColumn":49},{"ruleId":"107","severity":1,"message":"133","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"134","line":2,"column":62,"nodeType":"109","messageId":"110","endLine":2,"endColumn":72},{"ruleId":"107","severity":1,"message":"135","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":18},{"ruleId":"107","severity":1,"message":"136","line":10,"column":12,"nodeType":"109","messageId":"110","endLine":10,"endColumn":17},{"ruleId":"107","severity":1,"message":"137","line":10,"column":19,"nodeType":"109","messageId":"110","endLine":10,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":17,"column":40,"nodeType":"109","messageId":"140","endLine":17,"endColumn":45},{"ruleId":"128","severity":1,"message":"129","line":65,"column":84,"nodeType":"130","endLine":65,"endColumn":118},{"ruleId":"107","severity":1,"message":"141","line":3,"column":31,"nodeType":"109","messageId":"110","endLine":3,"endColumn":40},{"ruleId":"107","severity":1,"message":"142","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":31},{"ruleId":"107","severity":1,"message":"143","line":5,"column":33,"nodeType":"109","messageId":"110","endLine":5,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":89,"column":27,"nodeType":"146","messageId":"147","endLine":89,"endColumn":37,"fix":"148"},{"ruleId":"149","severity":1,"message":"150","line":89,"column":27,"nodeType":"146","messageId":"151","endLine":89,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":104,"column":17,"nodeType":"154","messageId":"155","endLine":129,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":145,"column":21,"nodeType":"158","messageId":"159","endLine":145,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":187,"column":29,"nodeType":"130","endLine":187,"endColumn":63},{"ruleId":"107","severity":1,"message":"160","line":2,"column":54,"nodeType":"109","messageId":"110","endLine":2,"endColumn":62},{"ruleId":"107","severity":1,"message":"161","line":2,"column":64,"nodeType":"109","messageId":"110","endLine":2,"endColumn":76},{"ruleId":"107","severity":1,"message":"162","line":2,"column":100,"nodeType":"109","messageId":"110","endLine":2,"endColumn":106},{"ruleId":"163","severity":1,"message":"164","line":50,"column":33,"nodeType":"165","endLine":50,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":57,"column":33,"nodeType":"130","endLine":57,"endColumn":50},{"ruleId":"107","severity":1,"message":"133","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"166","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":22},{"ruleId":"107","severity":1,"message":"167","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"168","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":26},{"ruleId":"107","severity":1,"message":"169","line":20,"column":13,"nodeType":"109","messageId":"110","endLine":20,"endColumn":19},{"ruleId":"107","severity":1,"message":"170","line":31,"column":17,"nodeType":"109","messageId":"110","endLine":31,"endColumn":23},{"ruleId":"107","severity":1,"message":"171","line":32,"column":15,"nodeType":"109","messageId":"110","endLine":32,"endColumn":27},{"ruleId":"107","severity":1,"message":"172","line":35,"column":15,"nodeType":"109","messageId":"110","endLine":35,"endColumn":26},"no-unused-vars","'AddStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'render' is defined but never used.","'Store' is defined but never used.","'Review' is defined but never used.","'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'Login' is defined but never used.","'loggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'EmojiObjectsIcon' is defined but never used.","'instance' is defined but never used.","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'useMenus' is defined but never used.","'menus' is assigned a value but never used.","'setMenus' is assigned a value but never used.","no-use-before-define","'menus' was used before it was defined.","usedBeforeDefined","'FormLabel' is defined but never used.","'FreeBreakfastOutlined' is defined but never used.","'RedeemRounded' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"175","text":"176"},"no-new-object","The object literal notation {} is preferrable.","preferLiteral","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Button' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'StarBorderIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'rating' is assigned a value but never used.","'typeIn' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2572,2572],"()"]
=======
[{"/home/yuarmy/桌面/Web Programming/NTUEEat/src/index.js":"1","/home/yuarmy/桌面/Web Programming/NTUEEat/src/reportWebVitals.js":"2","/home/yuarmy/桌面/Web Programming/NTUEEat/src/App.js":"3","/home/yuarmy/桌面/Web Programming/NTUEEat/src/containers/AddStore.js":"4","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Random.js":"5","/home/yuarmy/桌面/Web Programming/NTUEEat/src/containers/storeContainer.js":"6","/home/yuarmy/桌面/Web Programming/NTUEEat/src/userContext.js":"7","/home/yuarmy/桌面/Web Programming/NTUEEat/src/Register.js":"8","/home/yuarmy/桌面/Web Programming/NTUEEat/src/Profile.js":"9","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Mainbar.js":"10","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Navbar.js":"11","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Main.js":"12","/home/yuarmy/桌面/Web Programming/NTUEEat/src/routes/routes.js":"13","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/StoreList.js":"14","/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/BasicInfo.js":"15","/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/Ratestar.js":"16","/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/Review.js":"17","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/OutlinedCard.js":"18"},{"size":500,"mtime":1610888622621,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606914368645,"results":"21","hashOfConfig":"20"},{"size":1173,"mtime":1610888859842,"results":"22","hashOfConfig":"20"},{"size":8988,"mtime":1610888461378,"results":"23","hashOfConfig":"20"},{"size":4317,"mtime":1610866013097,"results":"24","hashOfConfig":"20"},{"size":1222,"mtime":1610883761310,"results":"25","hashOfConfig":"20"},{"size":104,"mtime":1610866013101,"results":"26","hashOfConfig":"20"},{"size":9227,"mtime":1610888461206,"results":"27","hashOfConfig":"20"},{"size":8332,"mtime":1610888461382,"results":"28","hashOfConfig":"20"},{"size":2926,"mtime":1610888461246,"results":"29","hashOfConfig":"20"},{"size":6398,"mtime":1610888659998,"results":"30","hashOfConfig":"20"},{"size":3069,"mtime":1610888461214,"results":"31","hashOfConfig":"20"},{"size":1226,"mtime":1610884445484,"results":"32","hashOfConfig":"20"},{"size":1313,"mtime":1610888461298,"results":"33","hashOfConfig":"20"},{"size":3262,"mtime":1610883570938,"results":"34","hashOfConfig":"20"},{"size":1389,"mtime":1609407060819,"results":"35","hashOfConfig":"20"},{"size":4426,"mtime":1610884121840,"results":"36","hashOfConfig":"20"},{"size":1975,"mtime":1610888461298,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wlcbvf",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/home/yuarmy/桌面/Web Programming/NTUEEat/src/index.js",[],["88","89"],"/home/yuarmy/桌面/Web Programming/NTUEEat/src/reportWebVitals.js",[],"/home/yuarmy/桌面/Web Programming/NTUEEat/src/App.js",["90","91","92","93","94","95","96","97","98","99","100","101"],"import './App.css';\nimport React, { useState} from \"react\";\nimport Register from './Register'\nimport Random from './main/Random'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Navbar from './main/Navbar'\nimport Profile from './Profile'\n//import AddStore from './containers/AddStore';\nimport Mainbar from './main/Mainbar'\nimport Main from './main/Main'\n// import { Grid } from '@material-ui/core'\nimport userContext from './userContext'\nimport Store from './containers/storeContainer'\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  return (\n    <Store/>\n    /*\n    <>\n      <Router>\n        <userContext.Provider value={{user, setUser}}>\n            <Mainbar />\n            <Route exact path=\"/\">\n              {} <Navbar /> }\n              <Main  />\n            </Route>\n            <Route path=\"/login\" exact component={Register} />\n            \n            <Route path=\"/random\" exact component={Random} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/addstore\" exact component={AddStore} />\n        </userContext.Provider>\n      </Router>\n    </>\n    */\n  )\n}\nexport default App;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/containers/AddStore.js",["102"],"/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Random.js",["103"],"import React, {useState} from 'react'\nimport { Button, Grid, Typography, Card, Dialog} from '@material-ui/core'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000\"})\n\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    outergrid : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    card : {\n        margin : theme.spacing(1),\n        padding : theme.spacing(4),\n    },\n    innercard : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    text : {\n        margin : theme.spacing(1),\n    },\n    buttonHelp : {\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    buttonEat : {\n        paddingLeft : theme.spacing(2),\n        paddingRight : theme.spacing(2),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    header : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(3),\n    }\n}))\n\nfunction Random({ CloseBackdrop }){\n    const classes = useStyle()\n    const [result, setResult] = useState(null)\n    const getResult = async () => {\n        const res = await instance.get('/stores/random')\n        setResult(res.data)\n    }\n    const handleClose = () => {\n        CloseBackdrop()\n        setResult(null)\n    }\n    return(\n        <>\n            <Grid container\n                justify=\"center\"\n                direction=\"row\"\n                className={classes.outergrid}\n            >\n                <Card alignItems=\"center\"\n                    justify=\"center\"\n                    style={{backgroundColor: \"#EBEBD3\"}}\n                    className={classes.card}\n                >\n                <Grid item\n                    container \n                    direction=\"column\"\n                    justify=\"center\" \n                >\n                    <Grid item>\n                        <Typography className={classes.header} variant=\"h2\">今天吃什麼</Typography>\n                    </Grid>\n                    <Grid item>\n                        {(result) ? (\n                            <Card \n                                alignItems=\"center\"\n                                className={classes.innercard}\n                            >\n                                <Typography variant=\"h5\" style={{ display : \"inline-block\" }} className={classes.text}>{result.storename}</Typography>\n                                <Link to={`/${result._id}`}\n                                    style={{paddingLeft: 13, \n                                        textDecoration: 'none', \n                                        display: \"inline-block\", \n                                        alignSelf : \"flex-end\",\n                                        float : \"right\"\n                                    }}\n                                >\n                                    <Button\n                                        className={classes.buttonEat}\n                                        style={{ \n                                            backgroundColor : \"#3C3C3B\",\n                                            color : \"#FFFFFF\"\n                                    }}>\n                                        吃！\n                                    </Button>\n                                </Link>\n                            </Card>\n                        ):null\n                        }\n                    </Grid>\n                    <Grid item \n                        container\n                        justify=\"center\"\n                    >\n                        <Button \n                            size=\"large\"\n                            onClick={getResult}\n                        >\n                            救救我！\n                        </Button>\n                        <Button onClick={handleClose}>close</Button>\n                    </Grid>\n                </Grid>\n                </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default Random;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/containers/storeContainer.js",["104","105"],"import { fetchStoreData } from '../routes/routes'\nimport BasicInfo from '../components/store/BasicInfo';\nimport Review from '../components/store/Review';\nimport { useEffect, useState } from 'react';\n\nfunction StoreContainer () {\n    let data;\n    const [ basicInfo, setBasicInfo ] = useState(null)\n    const [ review, setReview ] = useState(null)\n    useEffect(async () => {\n        data = await fetchStoreData('60039fe64aef0bee6124d989');\n        console.log(\"id: \", data._id)\n        setBasicInfo({\n            storeName: data.storename,\n            address: data.address,\n            phone: data.phone,\n            menus: data.picture\n        })\n        setReview({\n            storename: data.storename,\n            storeId: data._id,\n            rating: data.rating,\n            comments: data.comments\n        })\n    },[])\n    //const data = await fetchStoreData('6002e4d7d31a19a31b19086f');\n    //console.log(\"data: \", data)\n    if (data !== \"error\"){\n        \n        //console.log(basicInfo, review)\n        return (\n            <div>\n                <BasicInfo data={basicInfo&&basicInfo}/>\n                <Review data={review&&review}/>\n            </div>\n        )\n    }\n    \n}\n\nexport default StoreContainer;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/userContext.js",[],"/home/yuarmy/桌面/Web Programming/NTUEEat/src/Register.js",["106","107"],"import { TextField , Card, Button, InputAdornment, Grid, Typography, Snackbar, IconButton} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert';\nimport { useState , useContext} from 'react'\nimport logo from './Image/foodicon.png'\nimport { AccountCircle } from '@material-ui/icons'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport LockIcon from '@material-ui/icons/Lock';\nimport axios from 'axios'\nimport userContext from './userContext'\nimport { Redirect } from 'react-router-dom'\n\n\nconst instance = axios.create( { \n    baseURL : \"http://localhost:4000/users\"\n})\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    paper : {\n        margin : theme.spacing(20),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    cardcontent : {\n        margin : theme.spacing(1),\n    },\n    button : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(2)\n    },\n    snackbar : {\n        padding : theme.spacing(1)\n    }\n}))\nfunction Register(){\n    const classes = useStyle()\n    let {user, setUser} = useContext(userContext)\n    let [username , setUsername] = useState('');\n    let [password, setPassword] = useState('');\n    let [usernameError, setUsernameError] = useState(null);\n    let [passwordError, setPasswordError] = useState(null);\n    let [registered, setRegistered] = useState(false);\n    let [loggedIn, setLoggedIn] = useState(false)\n    const handleUsername = (e) => {\n        let target = e.target\n        setUsername(target.value)\n    }\n    const handlePassword = (e) => {\n        let target = e.target\n        setPassword(target.value)\n    }\n    const handleRegister = async (e) => {\n        if(username && password){\n            setUsernameError(null)\n            setPasswordError(null)\n            let res = await instance.post('/register', {\n                username : username,\n                password : password\n            })\n            if(res.data.isUnique){\n                // redirect to home page with user info\n                console.log('successfully registered')\n                setRegistered(true)\n            }else{\n                // check for username uniqueness\n                setUsernameError('username has been used')\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleLogin = async (e) => {\n        if(username && password){\n            setUsernameError('')\n            setPasswordError('')\n            let res = await instance.post('/login', {\n                username : username,\n                password : password\n            })\n            if(res.data.invalidUser){\n                setUsernameError('Invalid username')\n            }\n            if(res.data.invalidPassword){\n                setPasswordError('Invalid password')\n            }\n            if(!res.data.invalidUser && !res.data.invalidPassword){\n                setUser(res.data)\n                setLoggedIn(true)\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleClose = (e) => {\n        setRegistered(false)\n    }\n    const handleUsernameError = () => {\n        setUsernameError(false)\n    }\n    const handlePasswordError = () => {\n        setPasswordError(false)\n    }\n    return(\n        (!user)?\n        (<>\n        <Card className={classes.paper} alignItems=\"center\" >\n            <Grid container direction=\"row\" justify=\"center\" >\n                <Grid item>\n                    <Typography variant=\"h1\">NTUEEAT</Typography>\n                </Grid>\n                <Grid item container direction=\"column\">\n                <Grid\n                    container  \n                    item\n                    alignItems=\"center\"\n                    justify=\"center\"  \n                    direction=\"column\"\n                >\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <img src={logo}/>\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <TextField \n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AccountCircle />\n                                </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleUsername}\n                        />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                    <TextField\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        placeholder=\"Password\"\n                        label=\"Password\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <LockIcon />\n                            </InputAdornment>\n                            ),\n                        }}\n                        onChange={handlePassword}\n                    />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <Button onClick={handleRegister} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Register\n                        </Button>\n                        <Button onClick={handleLogin} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Login\n                        </Button>\n                        <Snackbar className={classes.snackbar}\n                            open={registered} \n                            autoHideDuration={4000} \n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            onClose={handleClose}\n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert onClose={handleClose} severity=\"success\">\n                            Registration Successful\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            open={usernameError} \n                            onClose={handleUsernameError}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleUsernameError} >\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handleUsernameError}>\n                            {usernameError ? `${usernameError}` : null}\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            open={passwordError} \n                            onClose={handlePasswordError}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handlePasswordError}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handlePasswordError}>\n                            {passwordError ? `${passwordError}`: null}\n                            </Alert>\n                        </Snackbar>\n                    </Grid>\n                </Grid>\n                </Grid>\n            </Grid>\n            </Card>\n        </>\n        ): <Redirect to=\"/\" />\n    )\n}\nexport default Register","/home/yuarmy/桌面/Web Programming/NTUEEat/src/Profile.js",["108","109"],"import { useState , useContext, useEffect} from 'react'\nimport userContext from './userContext'\nimport { Tabs, Tab , Typography, Avatar, Card, CardContent, Box,Button, IconButton, TextField, ButtonGroup, Paper} from '@material-ui/core'\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { blue } from \"@material-ui/core/colors\";\nimport { Link } from 'react-router-dom'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport axios from 'axios'\nimport RateStar from './components/store/Ratestar'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000/users\" })\n\nconst useStyle = makeStyles(theme => ({\n    AppBar : {\n        marginTop : theme.spacing(15),\n        marginLeft : theme.spacing(2),\n        marginRight : theme.spacing(2)\n    },\n    Tab : {\n        padding : theme.spacing(3),\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n    },\n    Avatar : {\n        margin : theme.spacing(5),\n        padding : theme.spacing(15)\n    },\n    username : {\n      paddingLeft : theme.spacing(4),\n      paddingTop : theme.spacing(2),\n      paddingBottom : theme.spacing(2)\n    },\n    Card : {\n      margin : theme.spacing(2),\n      padding : theme.spacing(4)\n    },\n    visit : {\n      margin : theme.spacing(2)\n    },\n    box1 : {\n      borderRadius:20,\n      padding : theme.spacing(1),\n    },\n    box2 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      padding : theme.spacing(2)\n    },\n    box3 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      width : '100%'\n    },\n    textfield : {\n      padding : theme.spacing(2),\n      borderRadius:20,\n      width : '95%'\n    },\n    button : {\n      margin : theme.spacing(2),\n    }\n}))\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiTabs: {\n        indicator: {\n          backgroundColor: blue[700]\n        }\n      },\n      MuiTab: {\n        root: {\n        },\n        selected: {\n          backgroundColor: blue[700],\n          color: blue[700],\n        }\n      }\n    },\n    typography: {\n      h1: {\n        fontSize: 18,\n      },\n      body1: {\n        fontWeight: 1000,\n      },\n      body2:{\n        fontWeight : 500\n      }\n    },\n  });\n\nfunction User() {\n    const classes = useStyle()\n    let {user} = useContext(userContext)\n    let [selectedTab, setSelectedTab] = useState(0)\n    let [comments, setComments] = useState()\n    let [favorites, setFavorites] = useState()\n    let [editComment, setEditComment] = useState()\n    let [updatedContent, setUpdatedContent] = useState()\n    let [updatedStar, setUpdatedStar] = useState()\n    useEffect(() => {\n      getFavorites()\n    },[])\n    const handleChange = (event, newValue) => {\n      setSelectedTab(newValue);\n    };\n    const getComments = async () => {\n      // returns entire user with comments populated\n      const {data} = await instance.get(`/comments/${user._id}`)\n      setComments([...data])\n    }\n    const getFavorites = async () => {\n      // returns entire user with favorites populated\n      const {data} = await instance.get(`/favorites/${user._id}`)\n      setFavorites([...data])\n    }\n    const handleRemoveFavorite = async (e) => {\n      // returns entire user with favorites populated\n      const {data} = await instance.delete(`/favorite?USERID=${user._id}&STOREID=${e.target.id}`)\n      setFavorites([...data])\n    }\n    const handleEditComment = async (e) => {\n      setEditComment(e.target.id)\n    }\n    const handleDeleteComment = async (e) => {\n      const {data} = await instance.delete(`/comments?USERID=${user._id}&COMMENTID=${e.target.id}`)\n      setComments([...data])\n    }\n    const handleSubmit = async () => {\n      // renew the comment\n      if(updatedStar && updatedContent){\n        // use the setEditComment to send the comment back\n        const {data} = await instance.post('/comments', {\n          _id : editComment,\n          content : updatedContent,\n          rating : updatedStar\n        })\n        setComments(prev => {\n          let newComments = prev.map(comment => {\n            if(comment._id === data._id){\n              comment.content = data.content\n              comment.rating = data.rating\n            }\n            return comment\n          })\n          return newComments\n        })\n      }\n      setEditComment(null)\n      setUpdatedContent('')\n      setUpdatedStar(null)\n    }\n    return(\n        <MuiThemeProvider theme={theme}>\n            <Paper \n            className={classes.AppBar}\n            indicatorColor=\"secondary\"\n            style={{ background : \"#D4E6F1\", color : \"#000000\" }}\n            position=\"static\">\n            {/* <Avatar className={classes.Avatar}>P</Avatar> */}\n            <Typography className={classes.username} variant=\"h3\" style={{color : \"#000000\"}}>{user.username}</Typography>\n            <Tabs value={selectedTab} onChange={handleChange}>\n                <Tab className={classes.Tab} value={0} label=\"Favorites\" onClick={getFavorites}/>\n                <Tab className={classes.Tab} value={1} label=\"Reviews\" onClick={getComments}/>\n                <Tab className={classes.Tab} value={2} label=\"Settings\"/>\n            </Tabs>\n            </Paper>\n            {(selectedTab === 0 && favorites) ? (\n              favorites.map(store => {\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Typography style={{ display: 'inline-block' }} >{store.storename}</Typography>\n                      <Link style={{textDecoration : \"none\"}}to={`/store/${store._id}`}>\n                        <Button className={classes.visit}variant=\"outlined\">Visit</Button>\n                      </Link>\n                      <IconButton onClick={(e) => {handleRemoveFavorite(e)}}>\n                        <RemoveCircleOutlineIcon style={{ display: 'inline-block' }} id={store._id}></RemoveCircleOutlineIcon>\n                      </IconButton>\n                    </CardContent>\n                  </Card>)\n              })) : null}\n            {(selectedTab === 1 && comments) ? (\n              comments.map(comment => {\n                if(editComment===comment._id){\n                  return(\n                    <>\n                    <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <RateStar handleSelectRate={setUpdatedStar}/>\n                      </Box>\n                      <Box className={classes.box3}>\n                      <TextField  className={classes.textfield}value={updatedContent} onChange={(e)=>setUpdatedContent(e.target.value)}></TextField>\n                      <Button className={classes.button} onClick={handleSubmit}>Update</Button>\n                      </Box>\n                    </CardContent>\n                    </Card>\n                    </>\n                  )\n                }\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <Typography style={{ display : 'inline-block'}} variant=\"body2\">{`rating : ${comment.rating}`}</Typography>\n                      </Box>\n                      <Box className={classes.box2}>\n                      <Typography style={{ display : 'block'}} variant=\"body2\">{comment.content}</Typography>\n                      </Box>\n                      <Box className={classes.box1}>\n                        <ButtonGroup>\n                        <IconButton onClick={(e) => {handleEditComment(e)}}><EditIcon id={comment._id}></EditIcon></IconButton>\n                        <IconButton onClick={(e) => {handleDeleteComment(e)}}><DeleteIcon id={comment._id}></DeleteIcon></IconButton>\n                        </ButtonGroup>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                )\n              })\n            ) : null}\n        </MuiThemeProvider>\n    )\n}\nexport default User;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Mainbar.js",["110","111","112","113","114"],"\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport React, {useState , useContext} from \"react\";\nimport Random from './Random'\nimport { IconButton, Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper} from '@material-ui/core';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FaceIcon from '@material-ui/icons/Face';\nimport './Navbar.css';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport HomeIcon from '@material-ui/icons/Home';\nimport userContext from '../userContext'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport foodIcon from '../Image/foodicon.png'\n// import instance from \"../routes\"\nimport { Link } from 'react-router-dom'  \n\nconst useStyles=makeStyles((theme)=>({\n    appbar:{\n      padding : theme.spacing(3),\n      backgroundColor : \"#D4E6F1\"\n    },\n    Button:{\n        margin:theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n}))\n\nexport default function Mainbar(){\n    let {user, setUser} = useContext(userContext)\n    const classes=useStyles();\n    const[open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleLogOut = () => {\n        setUser(null)\n    }\n    return(\n        <>\n        <Grid container>\n        <AppBar className={classes.appbar}>\n            <Grid item container spacing={2} justify=\"space-between\">\n                {\n                    (user) ? (\n                        <Grid item>\n                            <Link to='/' style={{ textDecoration : \"none\" }}><IconButton><HomeIcon></HomeIcon></IconButton></Link>\n                            <IconButton><ExitToAppIcon onClick={handleLogOut}></ExitToAppIcon></IconButton>\n                            <Link to=\"/profile\" style={{ textDecoration : \"none\"}}><IconButton><FaceIcon></FaceIcon></IconButton></Link>\n                            <Link to=\"/addstore\" style={{ textDecoration : \"none\"}}><IconButton><AddCircleIcon></AddCircleIcon></IconButton></Link>\n                            <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                        </Grid>\n                    ) : (\n                        <Grid item>\n                            <Link to=\"/login\" style={{ textDecoration : \"none\"}}><Button className={classes.Button} variant=\"outlined\" color=\"default\" size=\"large\">Login</Button></Link>\n                            <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                        </Grid>\n                    )\n                }\n            </Grid>\n        </AppBar>\n        </Grid>\n        <Backdrop open={open} className={classes.backdrop}>\n            <Random CloseBackdrop={handleClose}/>\n        </Backdrop>\n        </>\n    )\n}\n\n","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Navbar.js",["115","116","117","118","119","120"],"import axios from 'axios'\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport React, {useState , useContext,useEffect} from \"react\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Random from './Random'\nimport {Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper, Box, Typography} from '@material-ui/core';\nimport './Navbar.css';\nimport userContext from '../userContext'\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000/stores\" })\n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    FormControl:{\n        margin:theme.spacing(5),\n        minWidth:280,\n        minHeight:3,\n        alignSelf: 'flex-end',\n        flexGrow: 1,\n        \n    },\n    toolbar: {\n        minHeight: 128,\n        alignItems: 'fixed-end',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(2),\n    },\n    button:{\n        marginLeft : theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    Avatar:{\n        margin:theme.spacing(0),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paper : {\n        marginTop : theme.spacing(16),\n        marginRight : theme.spacing(2),\n        marginLeft : theme.spacing(2),\n        padding : theme.spacing(2)\n    },\n    box2 : {\n        margin : theme.spacing(2),\n        backgroundColor: \"#D4E6F1\",\n        borderRadius:20,\n        padding : theme.spacing(2)\n    },\n}))\n\nexport default function Navbar(props){\n    let {user} = useContext(userContext)\n    const classes=useStyles();\n    // const[location,setLocal]=useState(\"\");\n    // const[price,setPrice]=useState(\"\");\n    // const[prefer,setPrefer]=useState(\"\");\n    const[open, setOpen] = useState(false)\n    const[search, setSearch] = useState('')\n    const handleChangelocal=e=>{\n        props.Local(e.target.value)\n    };\n    const handleChangeprice=e=>{\n        props.Price(e.target.value)\n    };\n    const handleChangeprefer=e=>{\n        props.Prefer(e.target.value)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleSetSearch = (e) => {\n        setSearch(e.target.value)\n    }\n    const handleSearch = async () => {\n        const {data} = await instance.post(`/search/?QUERY=${search}`)\n    }\n    // useEffect(async ()=>{\n        \n    //     console.log(Local);\n    //     sole.log(Local);\n    //   },[])\n    \n    \n    return(\n        <Grid container>\n            <Paper className={classes.paper}>\n                {/* <Link className=\"navbar-brand\" to=\"/\">\n                    <img src={foodIcon}/>\n                </Link> */}\n                <Box className={classes.box2}>\n                <Grid item container>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl}>\n                        <InputLabel>location</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-location\"\n                        id=\"location-select\"\n                        displayEmpty\n                        // value={location}\n                        onChange={handleChangelocal}\n                        >\n                            {/* <MenuItem value=\"\">Empty</MenuItem> */}\n                            <MenuItem value={\"118\"}>118</MenuItem>\n                            <MenuItem value={\"公館\"}>公館</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Price</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-price\"\n                        id=\"price-select\"\n                        displayEmpty\n                        // value={price}\n                        onChange={handleChangeprice}\n                        >\n                            {/* <MenuItem value={\"\"}>Empty</MenuItem> */}\n                            <MenuItem value={\"$\"}>$</MenuItem>\n                            <MenuItem value={\"$$\"}>$$</MenuItem>\n                            <MenuItem value={\"$$$\"}>$$$</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Preference</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-prefer\"\n                        id=\"prefer-select\"\n                        displayEmpty\n                        // value={prefer}\n                        onChange={handleChangeprefer}\n                        >\n                            {/* <MenuItem value={\"\"}>Empty</MenuItem> */}\n                            <MenuItem value={\"韓式\"} >韓式</MenuItem>\n                            <MenuItem value={\"壽司\"}>壽司</MenuItem>\n                            <MenuItem value={\"牛肉麵\"}>牛肉麵</MenuItem>\n                            <MenuItem value={\"泰式\"}>泰式</MenuItem>\n                            <MenuItem value={\"咖哩\"}>咖哩</MenuItem>\n                            <MenuItem value={\"義大利麵\"}>義大利麵</MenuItem>\n                        </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={props.submit}>Submit</Button>\n                    </Grid>\n                </Grid>\n                </Box>\n                    <Grid item xs={4}>\n                        <Box className={classes.box2}>\n                            <TextField value={search} variant=\"outlined\" label=\"Restaurant name\" onChange={(e) => handleSetSearch(e)}></TextField>\n                            <Button className={classes.button} onClick={handleSearch}>Search</Button>\n                        </Box>\n                    </Grid>\n            </Paper>\n            <Backdrop open={open} className={classes.backdrop}>\n                <Random CloseBackdrop={handleClose}/>\n            </Backdrop>\n        </Grid>\n       \n    )\n}\n\n","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/Main.js",["121","122","123","124","125","126","127"],"// import Button from '@material-ui/core/Button';\nimport Navbar from './Navbar'\nimport StoreList from \"./StoreList\"\n// import Store from \"./Store\"\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'  \nimport axios from \"axios\"\nimport Alert from '@material-ui/lab/Alert';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { makeStyles, Snackbar , IconButton} from '@material-ui/core'\nimport { useState ,useEffect , useContext} from 'react'\nimport userContext from '../userContext'\n\nconst useStyles = makeStyles(theme => ({\n  snackbar : {\n    padding : theme.spacing(1)\n  }\n}))\n\n\nconst instance = axios.create({baseURL : \"http://localhost:4000/stores\"});\nexport default function Main() {\n  // const Select=\"\"\n  let {user} = useContext(userContext)\n  const classes = useStyles()\n  const [content,setContents]=useState(\"\") \n  // const [Select,setSelect]=useState(\"\")\n  const[location,setLocal]=useState(\"\");\n  const[price,setPrice]=useState(\"\");\n  const[prefer,setPrefer]=useState(\"\");\n  let [error,setError] = useState(null)\n  //Select={location,price,prefer}\n  const handleSetLocal = (e) => {\n    setLocal(e)\n  }\n  const handleSetPrice = (e) => {\n    setPrice(e)\n  }\n  const handleSetPrefer = (e) => {\n    setPrefer(e)\n  }\n  const handleClose = (e) => {\n    setError(false)\n  }\n  const handleError = () => {\n      setError(false)\n  }\n  useEffect(async ()=>{\n    const {data} = await instance.get(\"/\");\n    if(data.msg){\n      setContents(null)\n    }else if(data.Error){\n      console.log(data.Error)\n    }else{\n      setContents(data);\n    }\n    console.log(location,price,prefer)\n  },[])\n\n  const Submit=async()=>{\n    const {data} = await instance.post(\"/\",{\n      pricing:price,\n      location:location,\n      preferences:prefer\n    });\n    if(data.msg){\n      setContents(null)\n    }else if(data.Error){\n      console.log(data.Error)\n    }else{\n      setContents(data);\n    }\n    console.log(content);\n  }\n  \n  return (\n      <div className=\"main\">\n      \n        <Navbar Local={handleSetLocal} Price={handleSetPrice} Prefer={handleSetPrefer} submit={Submit}/>\n        <div className=\"stores\">\n          <StoreList className=\"storeList\" data={content}/>\n        </div>\n        <Snackbar className={classes.snackbar}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            open={error} \n                            onClose={handleClose}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleError} >\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handleError}>\n                            {error ? `${error}` : null}\n                            </Alert>\n                        </Snackbar>\n      </div>\n      \n    );\n}\n","/home/yuarmy/桌面/Web Programming/NTUEEat/src/routes/routes.js",["128"],"const axios = require('axios');\n\nconst instance = axios.create({baseURL : \"http://localhost:4000\"});\n\n// AddStore\nconst uploadStoreInfo = async (encodedFiles) => {\n    let response;\n    await instance.post('/stores/addstore', \n        encodedFiles,\n        { headers : {'Content-Type' : 'application/json'} }\n    )\n    .then(res => {\n        console.log(res.data)\n        if(res.data){\n            response = res.data.error\n            console.log(response)\n        }else{\n            response = 'success'\n        }\n    })\n    .catch(err => {\n        console.error('Error : ', err)\n        response='error'\n    });\n    return response;\n}\n\n// Store\nconst fetchStoreData = async (storeId) => {\n    let response;\n    await instance.get(`/stores/store/${storeId}`)\n    .then(res => {\n        response = res.data;\n    })\n    .catch(err => { \n        console.error('Error : ',err)\n        response = \"error\" \n    })\n    return response;\n}\n\n// Comment\nconst sendComment = async (data) => {\n    let response;\n    console.log(data)\n    await instance.post(`/stores/store/${data.storeid}`, data)\n    .then(res => {response = res})\n    .catch(err => {\n        throw err\n    })\n}\n\nexport { uploadStoreInfo, fetchStoreData, sendComment };\n","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/StoreList.js",["129","130","131","132","133","134","135","136","137","138","139"],"import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport OutlinedCard from \"./OutlinedCard\"\n// import Favorite from \"./Favorite\"\nimport { Grid, Paper } from '@material-ui/core';\nimport axios from \"axios\"\nimport  { uploadStoreInfo, fetchStoreData } from \"../routes/routes\";\n// const API_ROOT = 'http://localhost:4000/api'\n// const instance = axios.create({\n//   baseURL: API_ROOT\n// })\nconst useStyles = makeStyles((theme)=>({\n    root: {\n      minWidth: 275,\n    },\n    title: {\n      fontSize: 14,\n    },  \n  }));\n  \nexport default function StoreList(props){\n    const classes = useStyles();\n    return( \n        <>\n        <Paper>\n        <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={6} justify=\"space-between\" alignItems=\"center\">\n          {props.data ? \n          props.data.map(item=><OutlinedCard data={item} key={item._id}/>) : null }\n        </Grid>\n        <Grid item xs>\n          {/* <Favorite/> */}\n        </Grid>\n      </Grid>\n      </Paper>\n        </>\n    )\n}\n","/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/BasicInfo.js",["140","141","142","143","144"],"import { useState } from 'react';\nimport { List, ListItem, ListItemIcon, ListItemText, GridList, GridListTile, Backdrop, ButtonBase, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport RoomIcon from '@material-ui/icons/Room';\n\nconst useStyles = makeStyles(theme => (\n    {\n        infoList: {\n\n        },\n        menuGrid: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '100%'\n        },\n        imageContainer: {\n            position: 'relative',\n            border: '5px',\n            height: 100,\n            '&:hover': {\n                cursor: 'pointer',\n            }\n        },\n        imageButton: {\n            position: 'absolute',\n            height: '100%',\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center'\n\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff'\n        }\n    }\n));\n\nfunction TogglePic() {\n    //const [ open, setOpen ] = useState(false)\n    return useState(false);\n}\n// Backdrop\nfunction BasicInfo (props) {\n    const classes = useStyles();\n    function MenuGrid (props) {\n        return (\n            <div className={classes.menuGrid}>\n                {props.data&&props.data.menus.map(menu => {\n                    const [ open, setOpen ] = TogglePic();\n                    console.log(menu)\n                    return (\n                        <div key={Date.now()+Math.random()}>\n                            <ButtonBase\n                                onClick={() => setOpen(true)}\n                            >\n                                <div className={classes.imageContainer} >\n                                    <img src={menu} style={{height: '100%'}}/>\n                                </div>\n                            </ButtonBase>\n                            <Backdrop className={classes.backdrop} open={open} onClick={() => setOpen(false)}>\n                                <img src={menu}/>\n                            </Backdrop>\n                        </div>\n                    )\n                })}\n            </div>     \n        )\n    }\n    return (\n        <div className={classes.infoList}>\n            <List>\n                <ListItem>\n                    <ListItemIcon>\n                        <RestaurantIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={props.data&&props.data.storeName} />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemIcon>\n                        <RoomIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={props.data&&props.data.address} />\n                </ListItem>\n\n                <ListItem>\n                    <ListItemIcon>\n                        <PhoneIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={props.data&&props.data.phone} />\n                </ListItem>\n            </List>\n            <MenuGrid data={props.data}/>\n        </div>\n    )\n}\n\nexport default BasicInfo;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/Ratestar.js",[],"/home/yuarmy/桌面/Web Programming/NTUEEat/src/components/store/Review.js",["145","146","147","148","149","150","151"],"import React, { useState, useEffect, useContext } from 'react';\nimport userContext from '../../userContext';\nimport { sendComment } from '../../routes/routes';\nimport { TextField, IconButton, Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport RateStar from './Ratestar'\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '10px',\n    },\n    commentList: {\n        overflow: 'scroll'\n    },\n    inlineStar: {\n        display: 'inline'\n    },\n    typeInComment: {\n        \n    }\n}));\nfunction Review (props) {\n    const classes = useStyles();\n    //let {user} = useContext(userContext)\n    //const { rating, comments } = props.data;\n    function StarHeartBar () {\n        return (\n            <div>\n                <div className=\"stars\"></div>\n                <div className=\"heart\"></div>\n            </div>\n        )\n    }\n\n    function TypeIn () {\n        const [ rate, setRate ] = useState(0);\n        const [ typeIn, setTypeIn ] = useState('');\n        const handleChange = event => {\n            setTypeIn(event.target.value);\n        }\n        const handleSubmit = async () => {\n            if (rate === 0) {\n                alert('請給至少一顆星星的評價ㄛ');\n            } else if(typeIn.length === 0) {\n                alert('請至少輸入一個字的評論ㄛ');\n            } else {\n                console.log('storeid: ', props.data.storeId)\n                const data = {\n                    storename: props.data.storename,\n                    username: 'selina',\n                    content: typeIn,\n                    rating: rate,\n                    storeid: props.data.storeId\n                }\n                try {\n                    await sendComment(data)\n                } catch (e) {\n                    throw e\n                }\n            }\n        }\n        return (\n            <div className={classes.typeInComment}>\n                <div style={{display: 'flex'}}>\n                    <Avatar style={{right: '5px'}} src=\"\"/>\n                    <div>\n                        <span style={{display: 'block'}}>Selina</span>\n                        <RateStar \n                            handleSelectRate={setRate}\n                            style={{display: 'block'}}\n                        />\n                    </div>\n                </div>\n                \n                <TextField onChange={handleChange} value={typeIn}/>\n                <IconButton onClick={handleSubmit}>\n                    <SendIcon />\n                </IconButton>\n            </div>\n        )\n    }\n    // remain: avatar\n    function Comments () {\n        return (\n            <List className={classes.commentList}>\n                {props.data&&props.data.comments.map(comment => (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"\"/>\n                                <ListItemText \n                                    primary={comment.username}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                className={classes.inlineStar}\n                                                color=\"textPrimary\"\n                                            >\n                                                {comment.rating}<StarIcon/>\n                                            </Typography>\n                                            {comment.content}\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItemAvatar>\n                        </ListItem>\n                    )\n                )}\n            </List>\n        )\n        \n    }\n    return ( \n        <div className={classes.root}>\n            \n            <TypeIn />\n            <Comments />\n        </div>\n    )\n}\n\nexport default Review;","/home/yuarmy/桌面/Web Programming/NTUEEat/src/main/OutlinedCard.js",["152","153","154","155","156","157","158","159"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport { produceWithPatches } from 'immer';\nimport axios from \"axios\"\nconst instance = axios.create({baseURL : \"http://localhost:4000/stores\"});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    margin : theme.spacing(2),\n    padding : theme.spacing(2)\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles();\n  const Favorite=()=>{\n    \n  }\n  \n    return (\n    <Card className={classes.root} variant=\"outlined\">\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={2} justify=\"space-between\">\n          <Grid item>\n            <Typography variant=\"h5\" component=\"h2\">\n              {props.data.storename}\n            </Typography>\n          </Grid>\n          <Grid item>\n              <IconButton aria-label=\"add to favorites\" onClick={Favorite}>\n                <FavoriteIcon />\n              </IconButton>\n            </Grid>\n          <Grid item container>\n            <Grid item>\n              <StarIcon></StarIcon>\n            </Grid>\n            <Grid item>\n              <Typography>\n              {props.rating? (`${props.props.rating} : `): 0 }\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n    </Card>\n  )\n\n  \n}\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"169","line":5,"column":27,"nodeType":"166","messageId":"167","endLine":5,"endColumn":33},{"ruleId":"164","severity":1,"message":"170","line":5,"column":35,"nodeType":"166","messageId":"167","endLine":5,"endColumn":40},{"ruleId":"164","severity":1,"message":"171","line":5,"column":42,"nodeType":"166","messageId":"167","endLine":5,"endColumn":46},{"ruleId":"164","severity":1,"message":"172","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"173","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":15},{"ruleId":"164","severity":1,"message":"174","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":15},{"ruleId":"164","severity":1,"message":"175","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":12},{"ruleId":"164","severity":1,"message":"176","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":19},{"ruleId":"164","severity":1,"message":"177","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":14},{"ruleId":"164","severity":1,"message":"178","line":16,"column":16,"nodeType":"166","messageId":"167","endLine":16,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"179","line":133,"column":2},{"ruleId":"164","severity":1,"message":"180","line":2,"column":42,"nodeType":"166","messageId":"167","endLine":2,"endColumn":48},{"ruleId":"181","severity":1,"message":"182","line":10,"column":15,"nodeType":"183","endLine":25,"endColumn":6},{"ruleId":"181","severity":1,"message":"184","line":11,"column":16,"nodeType":"185","endLine":11,"endColumn":64},{"ruleId":"164","severity":1,"message":"186","line":46,"column":10,"nodeType":"166","messageId":"167","endLine":46,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":141,"column":25,"nodeType":"189","endLine":141,"endColumn":42},{"ruleId":"164","severity":1,"message":"190","line":3,"column":34,"nodeType":"166","messageId":"167","endLine":3,"endColumn":40},{"ruleId":"181","severity":1,"message":"191","line":107,"column":7,"nodeType":"192","endLine":107,"endColumn":9,"suggestions":"193"},{"ruleId":"164","severity":1,"message":"194","line":6,"column":32,"nodeType":"166","messageId":"167","endLine":6,"endColumn":43},{"ruleId":"164","severity":1,"message":"195","line":6,"column":45,"nodeType":"166","messageId":"167","endLine":6,"endColumn":55},{"ruleId":"164","severity":1,"message":"196","line":6,"column":69,"nodeType":"166","messageId":"167","endLine":6,"endColumn":78},{"ruleId":"164","severity":1,"message":"197","line":6,"column":86,"nodeType":"166","messageId":"167","endLine":6,"endColumn":91},{"ruleId":"164","severity":1,"message":"198","line":14,"column":8,"nodeType":"166","messageId":"167","endLine":14,"endColumn":16},{"ruleId":"164","severity":1,"message":"199","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":14},{"ruleId":"164","severity":1,"message":"200","line":6,"column":38,"nodeType":"166","messageId":"167","endLine":6,"endColumn":47},{"ruleId":"164","severity":1,"message":"201","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":15},{"ruleId":"164","severity":1,"message":"202","line":9,"column":85,"nodeType":"166","messageId":"167","endLine":9,"endColumn":95},{"ruleId":"164","severity":1,"message":"177","line":62,"column":10,"nodeType":"166","messageId":"167","endLine":62,"endColumn":14},{"ruleId":"164","severity":1,"message":"203","line":85,"column":16,"nodeType":"166","messageId":"167","endLine":85,"endColumn":20},{"ruleId":"164","severity":1,"message":"169","line":6,"column":20,"nodeType":"166","messageId":"167","endLine":6,"endColumn":26},{"ruleId":"164","severity":1,"message":"204","line":7,"column":3,"nodeType":"166","messageId":"167","endLine":7,"endColumn":9},{"ruleId":"164","severity":1,"message":"170","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":8},{"ruleId":"164","severity":1,"message":"171","line":9,"column":3,"nodeType":"166","messageId":"167","endLine":9,"endColumn":7},{"ruleId":"164","severity":1,"message":"177","line":28,"column":8,"nodeType":"166","messageId":"167","endLine":28,"endColumn":12},{"ruleId":"181","severity":1,"message":"182","line":52,"column":13,"nodeType":"183","endLine":62,"endColumn":4},{"ruleId":"181","severity":1,"message":"205","line":62,"column":5,"nodeType":"192","endLine":62,"endColumn":7,"suggestions":"206"},{"ruleId":"164","severity":1,"message":"207","line":47,"column":19,"nodeType":"166","messageId":"167","endLine":47,"endColumn":27},{"ruleId":"164","severity":1,"message":"208","line":1,"column":15,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"164","severity":1,"message":"200","line":1,"column":24,"nodeType":"166","messageId":"167","endLine":1,"endColumn":33},{"ruleId":"164","severity":1,"message":"209","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":12},{"ruleId":"164","severity":1,"message":"210","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":19},{"ruleId":"164","severity":1,"message":"211","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":19},{"ruleId":"164","severity":1,"message":"212","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"202","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":18},{"ruleId":"164","severity":1,"message":"213","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":13},{"ruleId":"164","severity":1,"message":"214","line":12,"column":11,"nodeType":"166","messageId":"167","endLine":12,"endColumn":26},{"ruleId":"164","severity":1,"message":"215","line":12,"column":28,"nodeType":"166","messageId":"167","endLine":12,"endColumn":42},{"ruleId":"164","severity":1,"message":"216","line":27,"column":11,"nodeType":"166","messageId":"167","endLine":27,"endColumn":18},{"ruleId":"164","severity":1,"message":"217","line":2,"column":54,"nodeType":"166","messageId":"167","endLine":2,"endColumn":62},{"ruleId":"164","severity":1,"message":"218","line":2,"column":64,"nodeType":"166","messageId":"167","endLine":2,"endColumn":76},{"ruleId":"164","severity":1,"message":"212","line":2,"column":100,"nodeType":"166","messageId":"167","endLine":2,"endColumn":106},{"ruleId":"187","severity":1,"message":"188","line":63,"column":37,"nodeType":"189","endLine":63,"endColumn":79},{"ruleId":"187","severity":1,"message":"188","line":67,"column":33,"nodeType":"189","endLine":67,"endColumn":50},{"ruleId":"164","severity":1,"message":"200","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"219","line":1,"column":38,"nodeType":"166","messageId":"167","endLine":1,"endColumn":48},{"ruleId":"164","severity":1,"message":"176","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"220","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":22},{"ruleId":"164","severity":1,"message":"221","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":20},{"ruleId":"164","severity":1,"message":"222","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":26},{"ruleId":"164","severity":1,"message":"223","line":31,"column":14,"nodeType":"166","messageId":"167","endLine":31,"endColumn":26},{"ruleId":"164","severity":1,"message":"208","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"210","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":19},{"ruleId":"164","severity":1,"message":"211","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":19},{"ruleId":"164","severity":1,"message":"212","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"220","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":22},{"ruleId":"164","severity":1,"message":"224","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":20},{"ruleId":"164","severity":1,"message":"225","line":14,"column":10,"nodeType":"166","messageId":"167","endLine":14,"endColumn":28},{"ruleId":"164","severity":1,"message":"226","line":16,"column":7,"nodeType":"166","messageId":"167","endLine":16,"endColumn":15},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Random' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Navbar' is defined but never used.","'Profile' is defined but never used.","'Mainbar' is defined but never used.","'Main' is defined but never used.","'userContext' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 131 | \u001b[39m            console\u001b[33m.\u001b[39mlog(\u001b[32m\"data: \"\u001b[39m\u001b[33m,\u001b[39m parsedData)\u001b[0m\n\u001b[0m \u001b[90m 132 | \u001b[39m            \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m await uploadStoreInfo(\u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(parsedData))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 133 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 134 | \u001b[39m            console\u001b[33m.\u001b[39mlog(\u001b[32m\"res: \"\u001b[39m\u001b[33m,\u001b[39m res)\u001b[0m\n\u001b[0m \u001b[90m 135 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 136 | \u001b[39m            \u001b[90m// Redirection!!!!!!!!!!!!!!!!!!!!!!!!\u001b[39m\u001b[0m","'Dialog' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","'loggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'getFavorites'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'foodIcon' is defined but never used.","'AppBar' is defined but never used.","'useEffect' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'data' is assigned a value but never used.","'Switch' is defined but never used.","React Hook useEffect has missing dependencies: 'location', 'prefer', and 'price'. Either include them or remove the dependency array.",["230"],"'response' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'uploadStoreInfo' is defined but never used.","'fetchStoreData' is defined but never used.","'classes' is assigned a value but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'useContext' is defined but never used.","'StarBorderIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'StarHeartBar' is defined but never used.","'StarHalfIcon' is defined but never used.","'produceWithPatches' is defined but never used.","'instance' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [getFavorites]",{"range":"235","text":"236"},"Update the dependencies array to be: [location, prefer, price]",{"range":"237","text":"238"},[2829,2831],"[getFavorites]",[1641,1643],"[location, prefer, price]"]
>>>>>>> 9ca83f43bad747cb6503c7e733e6f1e35807fc91
