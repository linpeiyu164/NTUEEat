[{"/Users/chenbairu/NTUEEat/src/index.js":"1","/Users/chenbairu/NTUEEat/src/reportWebVitals.js":"2","/Users/chenbairu/NTUEEat/src/App.js":"3","/Users/chenbairu/NTUEEat/src/Profile.js":"4","/Users/chenbairu/NTUEEat/src/userContext.js":"5","/Users/chenbairu/NTUEEat/src/Register.js":"6","/Users/chenbairu/NTUEEat/src/main/Random.js":"7","/Users/chenbairu/NTUEEat/src/containers/AddStore.js":"8","/Users/chenbairu/NTUEEat/src/main/Navbar.js":"9","/Users/chenbairu/NTUEEat/src/main/Mainbar.js":"10","/Users/chenbairu/NTUEEat/src/Ratestar.js":"11","/Users/chenbairu/NTUEEat/src/Constants.js":"12","/Users/chenbairu/NTUEEat/src/routes/routes.js":"13","/Users/chenbairu/NTUEEat/src/main/Main.js":"14","/Users/chenbairu/NTUEEat/src/main/Store.js":"15","/Users/chenbairu/NTUEEat/src/main/StoreList.js":"16","/Users/chenbairu/NTUEEat/src/main/Favorite.js":"17","/Users/chenbairu/NTUEEat/src/main/OutlinedCard.js":"18"},{"size":500,"mtime":1610861657863,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606911919704,"results":"21","hashOfConfig":"20"},{"size":1120,"mtime":1610863654453,"results":"22","hashOfConfig":"20"},{"size":8333,"mtime":1610861657860,"results":"23","hashOfConfig":"20"},{"size":104,"mtime":1610861657865,"results":"24","hashOfConfig":"20"},{"size":9227,"mtime":1610861657861,"results":"25","hashOfConfig":"20"},{"size":4317,"mtime":1610861657864,"results":"26","hashOfConfig":"20"},{"size":8714,"mtime":1610861657862,"results":"27","hashOfConfig":"20"},{"size":5746,"mtime":1610861657864,"results":"28","hashOfConfig":"20"},{"size":2780,"mtime":1610861657863,"results":"29","hashOfConfig":"20"},{"size":1389,"mtime":1608282763425,"results":"30","hashOfConfig":"20"},{"size":260,"mtime":1610861657854,"results":"31","hashOfConfig":"20"},{"size":1114,"mtime":1610861657865,"results":"32","hashOfConfig":"20"},{"size":496,"mtime":1610865873545,"results":"33","hashOfConfig":"20"},{"size":1689,"mtime":1608282763429,"results":"34","hashOfConfig":"20"},{"size":1933,"mtime":1610867525414,"results":"35","hashOfConfig":"20"},{"size":1134,"mtime":1608282763426,"results":"36","hashOfConfig":"20"},{"size":1962,"mtime":1610868034782,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"jg8th1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chenbairu/NTUEEat/src/index.js",[],["84","85"],"/Users/chenbairu/NTUEEat/src/reportWebVitals.js",[],"/Users/chenbairu/NTUEEat/src/App.js",["86","87","88"],"import './App.css';\nimport React, { useState} from \"react\";\nimport Register from './Register'\nimport Random from './main/Random'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Navbar from './main/Navbar'\nimport Profile from './Profile'\nimport AddStore from './containers/AddStore';\nimport Mainbar from './main/Mainbar'\nimport Main from './main/Main'\n// import { Grid } from '@material-ui/core'\nimport userContext from './userContext'\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  return (\n    <>\n      <Router>\n        <userContext.Provider value={{user, setUser}}>\n            {/* <Mainbar /> */}\n            <Route exact path=\"/\">\n              {/* <Navbar /> */}\n            \n              <Main  />\n            </Route>\n            <Route path=\"/login\" exact component={Register} />\n            \n            <Route path=\"/random\" exact component={Random} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/addstore\" exact component={AddStore} />\n        </userContext.Provider>\n      </Router>\n    </>\n  )\n}\nexport default App;","/Users/chenbairu/NTUEEat/src/Profile.js",["89","90"],"import { useState , useContext, useEffect} from 'react'\nimport userContext from './userContext'\nimport { AppBar, Tabs, Tab , Typography, Avatar, Card, CardContent, Box,Button, IconButton, TextField, ButtonGroup} from '@material-ui/core'\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { blue } from \"@material-ui/core/colors\";\nimport { Link } from 'react-router-dom'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport axios from 'axios'\nimport RateStar from './Ratestar'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000/users\" })\n\nconst useStyle = makeStyles(theme => ({\n    AppBar : {\n        paddingTop : theme.spacing(6),\n    },\n    Tab : {\n        padding : theme.spacing(3),\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n    },\n    Avatar : {\n        margin : theme.spacing(5),\n        padding : theme.spacing(15)\n    },\n    username : {\n      paddingLeft : theme.spacing(4),\n      paddingTop : theme.spacing(2),\n      paddingBottom : theme.spacing(2)\n    },\n    Card : {\n      margin : theme.spacing(3),\n      padding : theme.spacing(4)\n    },\n    visit : {\n      margin : theme.spacing(2)\n    },\n    box1 : {\n      borderRadius:20,\n      padding : theme.spacing(1),\n    },\n    box2 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      padding : theme.spacing(2)\n    },\n    box3 : {\n      backgroundColor: \"#D4E6F1\",\n      borderRadius:20,\n      width : '100%'\n    },\n    textfield : {\n      padding : theme.spacing(2),\n      borderRadius:20,\n      width : '95%'\n    },\n    button : {\n      margin : theme.spacing(2),\n    }\n}))\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiTabs: {\n        indicator: {\n          backgroundColor: blue[700]\n        }\n      },\n      MuiTab: {\n        root: {\n        },\n        selected: {\n          backgroundColor: blue[700],\n          color: blue[700],\n        }\n      }\n    },\n    typography: {\n      h1: {\n        fontSize: 18,\n      },\n      body1: {\n        fontWeight: 1000,\n      },\n      body2:{\n        fontWeight : 500\n      }\n    },\n  });\nfunction User() {\n    const classes = useStyle()\n    let {user} = useContext(userContext)\n    let [selectedTab, setSelectedTab] = useState(0)\n    let [comments, setComments] = useState()\n    let [favorites, setFavorites] = useState()\n    let [editComment, setEditComment] = useState()\n    let [updatedContent, setUpdatedContent] = useState()\n    let [updatedStar, setUpdatedStar] = useState()\n    useEffect(() => {\n      getFavorites()\n    },[])\n    const handleChange = (event, newValue) => {\n      setSelectedTab(newValue);\n    };\n    const getComments = async () => {\n      // returns entire user with comments populated\n      const {data} = await instance.get(`/comments/${user._id}`)\n      setComments([...data])\n    }\n    const getFavorites = async () => {\n      // returns entire user with favorites populated\n      const {data} = await instance.get(`/favorites/${user._id}`)\n      setFavorites([...data])\n    }\n    const handleRemoveFavorite = async (e) => {\n      // returns entire user with favorites populated\n      const {data} = await instance.delete(`/favorite?USERID=${user._id}&STOREID=${e.target.id}`)\n      setFavorites([...data])\n    }\n    const handleEditComment = async (e) => {\n      setEditComment(e.target.id)\n    }\n    const handleDeleteComment = async (e) => {\n      const {data} = await instance.delete(`/comments?USERID=${user._id}&COMMENTID=${e.target.id}`)\n      setComments([...data])\n    }\n    const handleSubmit = async () => {\n      // renew the comment\n      if(updatedStar && updatedContent){\n        // use the setEditComment to send the comment back\n        const {data} = await instance.post('/comments', {\n          _id : editComment,\n          content : updatedContent,\n          rating : updatedStar\n        })\n        setComments(prev => {\n          let newComments = prev.map(comment => {\n            if(comment._id === data._id){\n              comment.content = data.content\n              comment.rating = data.rating\n            }\n            return comment\n          })\n          return newComments\n        })\n      }\n      setEditComment(null)\n      setUpdatedContent('')\n      setUpdatedStar(null)\n    }\n    return(\n        <MuiThemeProvider theme={theme}>\n            <AppBar \n            className={classes.AppBar}\n            indicatorColor=\"secondary\"\n            style={{ background : \"#D4E6F1\", color : \"#000000\" }}\n            position=\"static\">\n            {/* <Avatar className={classes.Avatar}>P</Avatar> */}\n            <Link to='/' style={{ textDecoration : \"none\" }}><Button>HomePage</Button></Link>\n            <Typography className={classes.username} variant=\"h3\" style={{color : \"#000000\"}}>{user.username}</Typography>\n            <Tabs value={selectedTab} onChange={handleChange}>\n                <Tab className={classes.Tab} value={0} label=\"Favorites\" onClick={getFavorites}/>\n                <Tab className={classes.Tab} value={1} label=\"Reviews\" onClick={getComments}/>\n                <Tab className={classes.Tab} value={2} label=\"Settings\"/>\n            </Tabs>\n            </AppBar>\n            {(selectedTab === 0 && favorites) ? (\n              favorites.map(store => {\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Typography style={{ display: 'inline-block' }} >{store.storename}</Typography>\n                      <Link style={{textDecoration : \"none\"}}to={`/store/${store._id}`}>\n                        <Button className={classes.visit}variant=\"outlined\">Visit</Button>\n                      </Link>\n                      <IconButton onClick={(e) => {handleRemoveFavorite(e)}}>\n                        <RemoveCircleOutlineIcon style={{ display: 'inline-block' }} id={store._id}></RemoveCircleOutlineIcon>\n                      </IconButton>\n                    </CardContent>\n                  </Card>)\n              })) : null}\n            {(selectedTab === 1 && comments) ? (\n              comments.map(comment => {\n                if(editComment===comment._id){\n                  return(\n                    <>\n                    <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <RateStar handleSelectRate={setUpdatedStar}/>\n                      </Box>\n                      <Box className={classes.box3}>\n                      <TextField  className={classes.textfield}value={updatedContent} onChange={(e)=>setUpdatedContent(e.target.value)}></TextField>\n                      <Button className={classes.button} onClick={handleSubmit}>Update</Button>\n                      </Box>\n                    </CardContent>\n                    </Card>\n                    </>\n                  )\n                }\n                return(\n                  <Card className={classes.Card}>\n                    <CardContent>\n                      <Box className={classes.box1}>\n                      <Typography variant=\"body1\">{comment.storename}</Typography>\n                      <Typography style={{ display : 'inline-block'}} variant=\"body2\">{`rating : ${comment.rating}`}</Typography>\n                      </Box>\n                      <Box className={classes.box2}>\n                      <Typography style={{ display : 'block'}} variant=\"body2\">{comment.content}</Typography>\n                      </Box>\n                      <Box className={classes.box1}>\n                        <ButtonGroup>\n                        <IconButton onClick={(e) => {handleEditComment(e)}}><EditIcon id={comment._id}></EditIcon></IconButton>\n                        <IconButton onClick={(e) => {handleDeleteComment(e)}}><DeleteIcon id={comment._id}></DeleteIcon></IconButton>\n                        </ButtonGroup>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                )\n              })\n            ) : null}\n        </MuiThemeProvider>\n    )\n}\nexport default User;","/Users/chenbairu/NTUEEat/src/userContext.js",[],"/Users/chenbairu/NTUEEat/src/Register.js",["91","92"],"import { TextField , Card, Button, InputAdornment, Grid, Typography, Snackbar, IconButton} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert';\nimport { useState , useContext} from 'react'\nimport logo from './Image/foodicon.png'\nimport { AccountCircle } from '@material-ui/icons'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport LockIcon from '@material-ui/icons/Lock';\nimport axios from 'axios'\nimport userContext from './userContext'\nimport { Redirect } from 'react-router-dom'\n\n\nconst instance = axios.create( { \n    baseURL : \"http://localhost:4000/users\"\n})\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    paper : {\n        margin : theme.spacing(20),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    cardcontent : {\n        margin : theme.spacing(1),\n    },\n    button : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(2)\n    },\n    snackbar : {\n        padding : theme.spacing(1)\n    }\n}))\nfunction Register(){\n    let {user, setUser} = useContext(userContext)\n    const classes = useStyle()\n    let [username , setUsername] = useState('');\n    let [password, setPassword] = useState('');\n    let [usernameError, setUsernameError] = useState(null);\n    let [passwordError, setPasswordError] = useState(null);\n    let [registered, setRegistered] = useState(false);\n    let [loggedIn, setLoggedIn] = useState(false)\n    const handleUsername = (e) => {\n        let target = e.target\n        setUsername(target.value)\n    }\n    const handlePassword = (e) => {\n        let target = e.target\n        setPassword(target.value)\n    }\n    const handleRegister = async (e) => {\n        if(username && password){\n            setUsernameError(null)\n            setPasswordError(null)\n            let res = await instance.post('/register', {\n                username : username,\n                password : password\n            })\n            if(res.data.isUnique){\n                // redirect to home page with user info\n                console.log('successfully registered')\n                setRegistered(true)\n            }else{\n                // check for username uniqueness\n                setUsernameError('username has been used')\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleLogin = async (e) => {\n        if(username && password){\n            setUsernameError('')\n            setPasswordError('')\n            let res = await instance.post('/login', {\n                username : username,\n                password : password\n            })\n            if(res.data.invalidUser){\n                setUsernameError('Invalid username')\n            }\n            if(res.data.invalidPassword){\n                setPasswordError('Invalid password')\n            }\n            if(!res.data.invalidUser && !res.data.invalidPassword){\n                setUser(res.data)\n                setLoggedIn(true)\n            }\n        }else{\n            if(!username){\n                setUsernameError('Please enter a username')\n            }else{\n                setUsernameError(null)\n            }\n            if(!password){\n                setPasswordError('Please enter a password')\n            }else{\n                setPasswordError(null);\n            }\n        }\n    }\n    const handleClose = (e) => {\n        setRegistered(false)\n    }\n    const handleUsernameError = () => {\n        setUsernameError(false)\n    }\n    const handlePasswordError = () => {\n        setPasswordError(false)\n    }\n    return(\n        (!user)?\n        (<>\n        <Card className={classes.paper} alignItems=\"center\" >\n            <Grid container direction=\"row\" justify=\"center\" >\n                <Grid item>\n                    <Typography variant=\"h1\">NTUEEAT</Typography>\n                </Grid>\n                <Grid item container direction=\"column\">\n                <Grid\n                    container  \n                    item\n                    alignItems=\"center\"\n                    justify=\"center\"  \n                    direction=\"column\"\n                >\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <img src={logo}/>\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <TextField \n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AccountCircle />\n                                </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleUsername}\n                        />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                    <TextField\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        placeholder=\"Password\"\n                        label=\"Password\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <LockIcon />\n                            </InputAdornment>\n                            ),\n                        }}\n                        onChange={handlePassword}\n                    />\n                    </Grid>\n                    <Grid item xs={8} className={classes.cardcontent}>\n                        <Button onClick={handleRegister} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Register\n                        </Button>\n                        <Button onClick={handleLogin} variant=\"text\" color=\"secondary\" className={classes.button}>\n                            Login\n                        </Button>\n                        <Snackbar className={classes.snackbar}\n                            open={registered} \n                            autoHideDuration={4000} \n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            onClose={handleClose}\n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert onClose={handleClose} severity=\"success\">\n                            Registration Successful\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            open={usernameError} \n                            onClose={handleUsernameError}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleUsernameError} >\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handleUsernameError}>\n                            {usernameError ? `${usernameError}` : null}\n                            </Alert>\n                        </Snackbar>\n                        <Snackbar className={classes.snackbar}\n                            open={passwordError} \n                            onClose={handlePasswordError}\n                            anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                            autoHideDuration={2000} \n                            action={\n                                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handlePasswordError}>\n                                    <HighlightOffIcon fontSize=\"small\" />\n                                </IconButton>\n                            }\n                        >\n                            <Alert severity=\"error\" onClose={handlePasswordError}>\n                            {passwordError ? `${passwordError}`: null}\n                            </Alert>\n                        </Snackbar>\n                    </Grid>\n                </Grid>\n                </Grid>\n            </Grid>\n            </Card>\n        </>\n        ): <Redirect to=\"/\" />\n    )\n}\nexport default Register","/Users/chenbairu/NTUEEat/src/main/Random.js",["93"],"import React, {useState} from 'react'\nimport { Button, Grid, Typography, Card, Dialog} from '@material-ui/core'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst instance = axios.create({ baseURL : \"http://localhost:4000\"})\n\nconst useStyle = makeStyles( theme => ({\n    root : {\n        minWidth: 275,\n    },\n    outergrid : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    card : {\n        margin : theme.spacing(1),\n        padding : theme.spacing(4),\n    },\n    innercard : {\n        margin : theme.spacing(2),\n        padding : theme.spacing(4),\n        maxWidth : 'lg',\n        minWidth: 'xs'\n    },\n    text : {\n        margin : theme.spacing(1),\n    },\n    buttonHelp : {\n        paddingLeft : theme.spacing(4),\n        paddingRight : theme.spacing(4),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    buttonEat : {\n        paddingLeft : theme.spacing(2),\n        paddingRight : theme.spacing(2),\n        margin : theme.spacing(1),\n        fontSize : 15,\n        borderRadius : 20\n    },\n    header : {\n        padding : theme.spacing(1),\n        margin : theme.spacing(3),\n    }\n}))\n\nfunction Random({ CloseBackdrop }){\n    const classes = useStyle()\n    const [result, setResult] = useState(null)\n    const getResult = async () => {\n        const res = await instance.get('/stores/random')\n        setResult(res.data)\n    }\n    const handleClose = () => {\n        CloseBackdrop()\n        setResult(null)\n    }\n    return(\n        <>\n            <Grid container\n                justify=\"center\"\n                direction=\"row\"\n                className={classes.outergrid}\n            >\n                <Card alignItems=\"center\"\n                    justify=\"center\"\n                    style={{backgroundColor: \"#EBEBD3\"}}\n                    className={classes.card}\n                >\n                <Grid item\n                    container \n                    direction=\"column\"\n                    justify=\"center\" \n                >\n                    <Grid item>\n                        <Typography className={classes.header} variant=\"h2\">今天吃什麼</Typography>\n                    </Grid>\n                    <Grid item>\n                        {(result) ? (\n                            <Card \n                                alignItems=\"center\"\n                                className={classes.innercard}\n                            >\n                                <Typography variant=\"h5\" style={{ display : \"inline-block\" }} className={classes.text}>{result.storename}</Typography>\n                                <Link to={`/${result._id}`}\n                                    style={{paddingLeft: 13, \n                                        textDecoration: 'none', \n                                        display: \"inline-block\", \n                                        alignSelf : \"flex-end\",\n                                        float : \"right\"\n                                    }}\n                                >\n                                    <Button\n                                        className={classes.buttonEat}\n                                        style={{ \n                                            backgroundColor : \"#3C3C3B\",\n                                            color : \"#FFFFFF\"\n                                    }}>\n                                        吃！\n                                    </Button>\n                                </Link>\n                            </Card>\n                        ):null\n                        }\n                    </Grid>\n                    <Grid item \n                        container\n                        justify=\"center\"\n                    >\n                        <Button \n                            size=\"large\"\n                            onClick={getResult}\n                        >\n                            救救我！\n                        </Button>\n                        <Button onClick={handleClose}>close</Button>\n                    </Grid>\n                </Grid>\n                </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default Random;","/Users/chenbairu/NTUEEat/src/containers/AddStore.js",["94","95","96","97","98","99","100","101"],"import { Component } from 'react';\nimport { uploadStoreInfo } from '../routes/routes';\nimport { TextField, MenuItem, FormLabel, Button, IconButton, Snackbar, Box, Grid, Paper, Typography} from '@material-ui/core';\nimport { regions, avgPrice, cuisines } from '../Constants';\nimport { FreeBreakfastOutlined, RedeemRounded} from '@material-ui/icons';\nimport Alert from '@material-ui/lab/Alert';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { Redirect } from 'react-router-dom'\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    root: {\n      backgroundColor: \"red\"\n    },\n    paper : {\n        padding : theme.spacing(4),\n        margin : theme.spacing(2)\n    },\n    paper2 : {\n        padding : theme.spacing(2),\n        margin : theme.spacing(1),\n        maxWidth : '100%',\n        maxHeight : '100%',\n    },\n    box : {\n        backgroundColor: \"#D4E6F1\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n    box2 : {\n        maxWidth : '40%',\n        maxHeight : '40%',\n    },\n    box3 : {\n        backgroundColor: \"#F2EDEB\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n    box4 : {\n        backgroundColor: \"#F7F0F5\",\n        borderRadius:20,\n        padding : theme.spacing(2),\n        marginTop : theme.spacing(2),\n        marginBottom : theme.spacing(2),\n    },\n});\n\n// Required: TextField, Select \nclass AddStore extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            urls: [],\n            restaurant: null,\n            phone: null,\n            dist: null,\n            address: null,\n            min: null,\n            max: null,\n            avg: null,\n            cuisine: null,\n            errormessage: null,\n            error : false,\n            success : false\n        }\n    }\n\n    handleChange = event => {\n        if (event.target.files){\n            const files = Array.from(event.target.files);\n           files.forEach(file => {\n               const reader = new FileReader();\n               reader.readAsDataURL(file);\n               reader.onloadend = () => {\n                   this.setState((prev) => ({\n                    urls: [...prev.urls, reader.result]\n                   }))\n               }\n           }); \n        }\n    }\n\n    handleValueChange = cap => {\n        const handleChange = event => {\n            const renew = new Object;\n            renew[cap] = event.target.value;\n            this.setState(renew);\n            console.log(this.state)\n        }\n        return handleChange;\n    }\n\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        const sendData = async () => {\n            const parsedData = { \n                images: this.state.urls \n            };\n            for (let [key, value] of Object.entries(this.state)) {\n                switch(key){\n                    case 'restaurant':\n                        parsedData.storename = value;\n                        break;\n                    case 'phone':\n                        parsedData.phone = value;\n                        break;\n                    case 'dist':\n                        parsedData.location = value;\n                        break;\n                    case 'address':\n                        parsedData.address = value;\n                        break;\n                    case 'min':\n                        if (value) parsedData.lowestPrice = value;\n                        break;\n                    case 'max':\n                        if (value) parsedData.highestPrice = value;\n                        break;\n                    case 'avg':\n                        parsedData.avgPrice = value;\n                        break;\n                    case 'cuisine':\n                        parsedData.type = value;\n                        break;\n                }\n            }\n            console.log(\"data: \", parsedData)\n            const res = await uploadStoreInfo(JSON.stringify(parsedData));\n            console.log(res)\n            // res should either be success or the error message\n            if(res === \"success\"){\n                this.setState({\n                    success : true\n                })\n            }else if(res !== \"success\"){\n                this.setState({\n                    error: true,\n                    errormessage : res\n                })\n            }\n            if (res == 'error') {\n                this.setState({\n                    errormessage: '系統出了一點問題QAQ 拜託再試一次Orz'\n                })\n            }\n        }\n        sendData();\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({\n            error : false\n        })\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n            {(!this.state.success) ? (\n            <Paper className={classes.paper}>\n            <Box className={classes.box}><Typography variant=\"h3\">表單</Typography></Box>\n            <form onSubmit={this.handleSubmit}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"餐廳名稱\" variant=\"outlined\" autoFocus={true} onChange={this.handleValueChange('restaurant')} required/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"電話\" variant=\"outlined\" onChange={this.handleValueChange('phone')}/></Box></Grid>\n                \n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"區域\" variant=\"outlined\" onChange={this.handleValueChange('dist')} select>{regions.map(region => <MenuItem key={region} value={region}>{region}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"地址\" variant=\"outlined\" onChange={this.handleValueChange('address')} required/></Box></Grid>\n                \n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"最低品項單價\" variant=\"outlined\" onChange={this.handleValueChange('min')}/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box3}><TextField label=\"最高品項單價\" variant=\"outlined\" onChange={this.handleValueChange('max')}/></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"平均價位\" variant=\"outlined\" onChange={this.handleValueChange('avg')} select required>{avgPrice.map(price => <MenuItem key={price} value={price}>{price}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={6}><Box className={classes.box4}><TextField label=\"類別\" variant=\"outlined\" onChange={this.handleValueChange('cuisine')} select required>{cuisines.map(cuisine => <MenuItem key={cuisine} value={cuisine}>{cuisine}</MenuItem>)}</TextField></Box></Grid>\n                <Grid item xs={12}>\n                    <Box className={classes.box} justifyContent=\"center\">\n                        <div><Typography>上傳至少一張菜單圖片ㄅ～</Typography></div>\n                        <input name=\"file\" type=\"file\" onChange={this.handleChange} multiple={true} accept=\"image/\" required/>\n                    </Box>\n                <Grid item container>\n                    {this.state.urls.map(menu => \n                    <Grid item>\n                        <Paper className={classes.paper2} key={Date.now()}>\n                            <img className=\"menu\" src={menu}/>\n                        </Paper>\n                    </Grid>)\n                    }\n                </Grid>\n                <Grid item><Button type=\"submit\" variant=\"outlined\">送出</Button></Grid>\n                </Grid>\n                </Grid>\n            </form>\n            <Snackbar \n                anchorOrigin={{ vertical : 'top', horizontal : 'right' }}\n                open={this.state.error} \n                onClose={this.handleSnackbarClose}\n                autoHideDuration={2000} \n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleSnackbarClose} >\n                        <HighlightOffIcon fontSize=\"small\"/>\n                    </IconButton>\n                }\n            >\n                <Alert severity=\"error\" onClose={this.handleSnackbarClose}>\n                {(this.state.error) ? `${this.state.errormessage}` : null}\n                </Alert>\n            </Snackbar>\n            </Paper>) : <Redirect to=\"/\" />\n            }\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(AddStore);","/Users/chenbairu/NTUEEat/src/main/Navbar.js",["102","103","104","105","106","107","108","109","110","111","112","113"],"import Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport React, {useState , useContext} from \"react\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Random from './Random'\nimport { IconButton, Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper} from '@material-ui/core';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FaceIcon from '@material-ui/icons/Face';\nimport './Navbar.css';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport userContext from '../userContext'\nimport foodIcon from '../Image/foodicon.png'\n// import instance from \"../routes\"\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom'  \n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    FormControl:{\n        margin:theme.spacing(5),\n        minWidth:280,\n        minHeight:3,\n        alignSelf: 'flex-end',\n        flexGrow: 1,\n        \n    },\n    toolbar: {\n        minHeight: 128,\n        alignItems: 'fixed-end',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(2),\n    },\n    Button:{\n        margin:theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    Avatar:{\n        margin:theme.spacing(0),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paper : {\n        marginTop : theme.spacing(16)\n    }\n}))\n\nexport default function Navbar(){\n    let {user} = useContext(userContext)\n    const classes=useStyles();\n    const[location,setLocal]=useState(\"\");\n    const[price,setPrice]=useState(\"\");\n    const[prefer,setPrefer]=useState(\"\");\n    const[open, setOpen] = useState(false)\n    const[search, setSearch] = useState('')\n    const handleChangelocal=e=>{\n        setLocal(e.target.value)\n    };\n    const handleChangeprice=e=>{\n        setPrice(e.target.value)\n    };\n    const handleChangeprefer=e=>{\n        setPrefer(e.target.value)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleSetSearch = (e) => {\n        setSearch(e.target.value)\n    }\n    const handleSearch = () => {\n    }\n    return(\n        <Grid container>\n            <Paper className={classes.paper}>\n                    {/* <Link className=\"navbar-brand\" to=\"/\">\n                        <img src={foodIcon}/>\n                    </Link> */}\n                <Grid item container>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl}>\n                        <InputLabel>location</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-location\"\n                        id=\"location-select\"\n                        displayEmpty\n                        value={location}\n                        onChange={handleChangelocal}\n                        >\n                            <MenuItem value=\"\">Empty</MenuItem>\n                            <MenuItem value={\"118\"}>118</MenuItem>\n                            <MenuItem value={\"公館\"}>公館</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Price</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-price\"\n                        id=\"price-select\"\n                        displayEmpty\n                        value={price}\n                        onChange={handleChangeprice}\n                        >\n                            <MenuItem value={\"\"}>Empty</MenuItem>\n                            <MenuItem value={\"$\"}>$</MenuItem>\n                            <MenuItem value={\"$$\"}>$$</MenuItem>\n                            <MenuItem value={\"$$$\"}>$$$</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl className={classes.FormControl} >\n                        <InputLabel>Preference</InputLabel>\n                        <Select className=\"select\"\n                        labeled=\"select-prefer\"\n                        id=\"prefer-select\"\n                        displayEmpty\n                        value={prefer}\n                        onChange={handleChangeprefer}\n                        >\n                            <MenuItem value={\"\"}>Empty</MenuItem>\n                            <MenuItem value={\"韓式\"} >韓式</MenuItem>\n                            <MenuItem value={\"壽司\"}>壽司</MenuItem>\n                            <MenuItem value={\"牛肉麵\"}>牛肉麵</MenuItem>\n                            <MenuItem value={\"泰式\"}>泰式</MenuItem>\n                            <MenuItem value={\"咖哩\"}>咖哩</MenuItem>\n                            <MenuItem value={\"義大利麵\"}>義大利麵</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField value={search} onChange={(e) => handleSetSearch(e)}></TextField>\n                        <Button onClick={handleSearch}>Search</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Backdrop open={open} className={classes.backdrop}>\n                <Random CloseBackdrop={handleClose}/>\n            </Backdrop>\n        </Grid>\n       \n    )\n}\n\n","/Users/chenbairu/NTUEEat/src/main/Mainbar.js",["114","115","116","117","118","119","120","121"],"\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport React, {useState , useContext} from \"react\";\nimport Random from './Random'\nimport { IconButton, Backdrop, FormControl, InputLabel, makeStyles, TextField, Grid, Paper} from '@material-ui/core';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport FaceIcon from '@material-ui/icons/Face';\nimport './Navbar.css';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport userContext from '../userContext'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport foodIcon from '../Image/foodicon.png'\n// import instance from \"../routes\"\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom'  \n\nconst useStyles=makeStyles((theme)=>({\n    appbar:{\n      padding : theme.spacing(3),\n      backgroundColor : \"#D4E6F1\"\n    },\n    Button:{\n        margin:theme.spacing(2),\n        alignSelf: 'flex',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n}))\n\nexport default function Mainbar(){\n    let {user, setUser} = useContext(userContext)\n    const classes=useStyles();\n    const[open, setOpen] = useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n    const handleLogOut = () => {\n        setUser(null)\n    }\n    return(\n        <>\n        <Grid container>\n        <AppBar className={classes.appbar}>\n            <Grid item container spacing={2} justify=\"space-between\">\n                {\n                    (user) ? (\n                    <Grid item>\n                        <IconButton><ExitToAppIcon onClick={handleLogOut}></ExitToAppIcon></IconButton>\n                        <Link to=\"/profile\" style={{ textDecoration : \"none\"}}><IconButton><FaceIcon></FaceIcon></IconButton></Link>\n                        <Link to=\"/addstore\" style={{ textDecoration : \"none\"}}><IconButton><AddCircleIcon></AddCircleIcon></IconButton></Link>\n                        <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                    </Grid>\n                    ) : (\n                        <Grid item>\n                            <Link to=\"/login\" style={{ textDecoration : \"none\"}}><Button className={classes.Button} variant=\"outlined\" color=\"default\" size=\"large\">Login</Button></Link>\n                            <IconButton onClick={() => setOpen(prev => !prev)}><EmojiObjectsIcon></EmojiObjectsIcon></IconButton>\n                        </Grid>\n                    )\n                }\n            </Grid>\n        </AppBar>\n        </Grid>\n        <Backdrop open={open} className={classes.backdrop}>\n            <Random CloseBackdrop={handleClose}/>\n        </Backdrop>\n        </>\n    )\n}\n\n","/Users/chenbairu/NTUEEat/src/Ratestar.js",[],"/Users/chenbairu/NTUEEat/src/Constants.js",[],"/Users/chenbairu/NTUEEat/src/routes/routes.js",[],"/Users/chenbairu/NTUEEat/src/main/Main.js",["122","123","124","125","126"],"/Users/chenbairu/NTUEEat/src/main/Store.js",["127","128","129","130","131"],"/Users/chenbairu/NTUEEat/src/main/StoreList.js",["132","133","134","135","136","137","138","139","140"],"/Users/chenbairu/NTUEEat/src/main/Favorite.js",["141","142"],"import React,{useState,useEffect} from \"react\"\nimport axios from 'axios'\nimport instance from \"../routes\"\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n// const API_ROOT = 'http://localhost:4000/api'\n// const instance = axios.create({\n//   baseURL: API_ROOT\n// })\n\nexport default function Favorite(){\n    const[Favorite,setFavorite]=useState(\"\");\n    const[favo_Id,setfavo_Id]=useState('');\n\n    const getId=async()=>{\n        const get=await instance.get(\"/User\")\n        try{setfavo_Id(get.data.favorites)}\n        catch{}\n    } \n    const loadData=async()=> {\n        instance.get(\"/Store\", {\n           params: {\n               id: favo_Id\n           }\n        })\n        .then(response => {setFavorite([...Favorite,response.data.storename])});\n    }\n    useEffect(() => {\n        if (!Favorite.length){\n            getId();\n            loadData();\n        }    \n    })\n    return(\n        <Paper>\n        <Typography>我的最愛</Typography>\n        {Favorite.map(content=>{\n            <div>\n                {content}\n            </div>\n        })}\n        </Paper>\n    )\n}",["143","144"],"/Users/chenbairu/NTUEEat/src/main/OutlinedCard.js",["145","146","147","148","149","150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":5,"column":42,"nodeType":"159","messageId":"160","endLine":5,"endColumn":46},{"ruleId":"157","severity":1,"message":"161","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":3,"column":42,"nodeType":"159","messageId":"160","endLine":3,"endColumn":48},{"ruleId":"164","severity":1,"message":"165","line":104,"column":7,"nodeType":"166","endLine":104,"endColumn":9,"suggestions":"167"},{"ruleId":"157","severity":1,"message":"168","line":46,"column":10,"nodeType":"159","messageId":"160","endLine":46,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":141,"column":25,"nodeType":"171","endLine":141,"endColumn":42},{"ruleId":"157","severity":1,"message":"172","line":2,"column":42,"nodeType":"159","messageId":"160","endLine":2,"endColumn":48},{"ruleId":"157","severity":1,"message":"173","line":3,"column":31,"nodeType":"159","messageId":"160","endLine":3,"endColumn":40},{"ruleId":"157","severity":1,"message":"174","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":31},{"ruleId":"157","severity":1,"message":"175","line":5,"column":33,"nodeType":"159","messageId":"160","endLine":5,"endColumn":46},{"ruleId":"176","severity":1,"message":"177","line":89,"column":27,"nodeType":"178","messageId":"179","endLine":89,"endColumn":37,"fix":"180"},{"ruleId":"181","severity":1,"message":"182","line":89,"column":27,"nodeType":"178","messageId":"183","endLine":89,"endColumn":37},{"ruleId":"184","severity":1,"message":"185","line":104,"column":17,"nodeType":"186","messageId":"187","endLine":129,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":145,"column":21,"nodeType":"190","messageId":"191","endLine":145,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":187,"column":29,"nodeType":"171","endLine":187,"endColumn":63},{"ruleId":"157","severity":1,"message":"192","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"193","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":15},{"ruleId":"157","severity":1,"message":"194","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":20},{"ruleId":"157","severity":1,"message":"195","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":24},{"ruleId":"157","severity":1,"message":"196","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":16},{"ruleId":"157","severity":1,"message":"197","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":21},{"ruleId":"157","severity":1,"message":"198","line":14,"column":8,"nodeType":"159","messageId":"160","endLine":14,"endColumn":16},{"ruleId":"157","severity":1,"message":"199","line":17,"column":22,"nodeType":"159","messageId":"160","endLine":17,"endColumn":28},{"ruleId":"157","severity":1,"message":"200","line":18,"column":5,"nodeType":"159","messageId":"160","endLine":18,"endColumn":11},{"ruleId":"157","severity":1,"message":"201","line":19,"column":5,"nodeType":"159","messageId":"160","endLine":19,"endColumn":10},{"ruleId":"157","severity":1,"message":"158","line":20,"column":5,"nodeType":"159","messageId":"160","endLine":20,"endColumn":9},{"ruleId":"157","severity":1,"message":"202","line":61,"column":10,"nodeType":"159","messageId":"160","endLine":61,"endColumn":14},{"ruleId":"157","severity":1,"message":"203","line":6,"column":32,"nodeType":"159","messageId":"160","endLine":6,"endColumn":43},{"ruleId":"157","severity":1,"message":"204","line":6,"column":45,"nodeType":"159","messageId":"160","endLine":6,"endColumn":55},{"ruleId":"157","severity":1,"message":"205","line":6,"column":69,"nodeType":"159","messageId":"160","endLine":6,"endColumn":78},{"ruleId":"157","severity":1,"message":"206","line":6,"column":86,"nodeType":"159","messageId":"160","endLine":6,"endColumn":91},{"ruleId":"157","severity":1,"message":"198","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":16},{"ruleId":"157","severity":1,"message":"199","line":16,"column":22,"nodeType":"159","messageId":"160","endLine":16,"endColumn":28},{"ruleId":"157","severity":1,"message":"200","line":17,"column":5,"nodeType":"159","messageId":"160","endLine":17,"endColumn":11},{"ruleId":"157","severity":1,"message":"201","line":18,"column":5,"nodeType":"159","messageId":"160","endLine":18,"endColumn":10},{"ruleId":"157","severity":1,"message":"161","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"199","line":6,"column":20,"nodeType":"159","messageId":"160","endLine":6,"endColumn":26},{"ruleId":"157","severity":1,"message":"200","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":9},{"ruleId":"157","severity":1,"message":"201","line":8,"column":3,"nodeType":"159","messageId":"160","endLine":8,"endColumn":8},{"ruleId":"157","severity":1,"message":"158","line":9,"column":3,"nodeType":"159","messageId":"160","endLine":9,"endColumn":7},{"ruleId":"157","severity":1,"message":"207","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"208","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"209","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"210","line":23,"column":12,"nodeType":"159","messageId":"160","endLine":23,"endColumn":20},{"ruleId":"157","severity":1,"message":"211","line":23,"column":22,"nodeType":"159","messageId":"160","endLine":23,"endColumn":33},{"ruleId":"157","severity":1,"message":"212","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"213","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":19},{"ruleId":"157","severity":1,"message":"214","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":19},{"ruleId":"157","severity":1,"message":"215","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"209","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"216","line":12,"column":11,"nodeType":"159","messageId":"160","endLine":12,"endColumn":26},{"ruleId":"157","severity":1,"message":"217","line":12,"column":28,"nodeType":"159","messageId":"160","endLine":12,"endColumn":42},{"ruleId":"157","severity":1,"message":"218","line":27,"column":11,"nodeType":"159","messageId":"160","endLine":27,"endColumn":18},{"ruleId":"164","severity":1,"message":"219","line":39,"column":15,"nodeType":"220","endLine":42,"endColumn":6},{"ruleId":"157","severity":1,"message":"221","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":37,"column":30,"nodeType":"220","messageId":"224","endLine":37,"endColumn":32},{"ruleId":"153","replacedBy":"225"},{"ruleId":"155","replacedBy":"226"},{"ruleId":"157","severity":1,"message":"213","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":19},{"ruleId":"157","severity":1,"message":"214","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":19},{"ruleId":"157","severity":1,"message":"215","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"227","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":22},{"ruleId":"157","severity":1,"message":"228","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":20},{"ruleId":"157","severity":1,"message":"229","line":14,"column":10,"nodeType":"159","messageId":"160","endLine":14,"endColumn":28},{"ruleId":"157","severity":1,"message":"230","line":29,"column":10,"nodeType":"159","messageId":"160","endLine":29,"endColumn":18},{"ruleId":"157","severity":1,"message":"231","line":29,"column":19,"nodeType":"159","messageId":"160","endLine":29,"endColumn":30},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Mainbar' is defined but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFavorites'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'loggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dialog' is defined but never used.","'FormLabel' is defined but never used.","'FreeBreakfastOutlined' is defined but never used.","'RedeemRounded' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"235","text":"236"},"no-new-object","The object literal notation {} is preferrable.","preferLiteral","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'EmojiObjectsIcon' is defined but never used.","'FaceIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'foodIcon' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'user' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'react' is defined but never used.","'instance' is defined but never used.","'Typography' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'uploadStoreInfo' is defined but never used.","'fetchStoreData' is defined but never used.","'classes' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["232"],["233"],"'StarBorderIcon' is defined but never used.","'StarHalfIcon' is defined but never used.","'produceWithPatches' is defined but never used.","'pricetag' is assigned a value but never used.","'setPriceTag' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},[2572,2572],"()","Update the dependencies array to be: [getFavorites]",{"range":"239","text":"240"},[2734,2736],"[getFavorites]"]